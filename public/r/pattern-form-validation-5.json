{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pattern-form-validation-5",
  "type": "registry:component",
  "title": "Form Validation 5",
  "description": "A form pattern: form-validation-5",
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/patterns/form/validation/form-validation-5.tsx",
      "content": "\"use client\";\n\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\n\nexport const title = \"Conditional Validation\";\n\nconst formSchema = z\n  .object({\n    hasCompany: z.boolean().default(false),\n    companyName: z.string().optional(),\n    companyWebsite: z.string().url().optional().or(z.literal(\"\")),\n  })\n  .refine(\n    (data) => {\n      if (data.hasCompany) {\n        return data.companyName && data.companyName.length >= 2;\n      }\n      return true;\n    },\n    {\n      message: \"Company name is required\",\n      path: [\"companyName\"],\n    }\n  );\n\nconst Example = () => {\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      hasCompany: false,\n      companyName: \"\",\n      companyWebsite: \"\",\n    },\n  });\n\n  const hasCompany = form.watch(\"hasCompany\");\n\n  function onSubmit(values: z.infer<typeof formSchema>) {\n    console.log(values);\n  }\n\n  return (\n    <div className=\"w-full max-w-md\">\n      <Form {...form}>\n        <form className=\"space-y-4\" onSubmit={form.handleSubmit(onSubmit)}>\n          <FormField\n            control={form.control}\n            name=\"hasCompany\"\n            render={({ field }) => (\n              <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\n                <FormControl>\n                  <Checkbox\n                    checked={field.value}\n                    onCheckedChange={field.onChange}\n                  />\n                </FormControl>\n                <div className=\"space-y-1 leading-none\">\n                  <FormLabel>I have a company</FormLabel>\n                  <FormDescription>\n                    Check this if you represent a company.\n                  </FormDescription>\n                </div>\n              </FormItem>\n            )}\n          />\n          {hasCompany && (\n            <>\n              <FormField\n                control={form.control}\n                name=\"companyName\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Company Name</FormLabel>\n                    <FormControl>\n                      <Input\n                        className=\"bg-background\"\n                        placeholder=\"Acme Inc\"\n                        {...field}\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name=\"companyWebsite\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Company Website (Optional)</FormLabel>\n                    <FormControl>\n                      <Input\n                        className=\"bg-background\"\n                        placeholder=\"https://example.com\"\n                        type=\"url\"\n                        {...field}\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </>\n          )}\n          <Button type=\"submit\">Submit</Button>\n        </form>\n      </Form>\n    </div>\n  );\n};\n\nexport default Example;\n",
      "type": "registry:component"
    }
  ]
}