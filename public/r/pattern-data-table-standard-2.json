{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pattern-data-table-standard-2",
  "type": "registry:component",
  "title": "Data Table Standard 2",
  "description": "A data-table pattern: data-table-standard-2",
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/patterns/data-table/standard/data-table-standard-2.tsx",
      "content": "\"use client\";\n\nimport {\n  type ColumnDef,\n  type ColumnFiltersState,\n  flexRender,\n  getCoreRowModel,\n  getFilteredRowModel,\n  useReactTable,\n} from \"@tanstack/react-table\";\nimport * as React from \"react\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\n\nexport const title = \"Data Table with Filters\";\n\ntype User = {\n  id: string;\n  name: string;\n  email: string;\n  role: string;\n  status: string;\n};\n\nconst data: User[] = [\n  {\n    id: \"1\",\n    name: \"John Doe\",\n    email: \"john@example.com\",\n    role: \"Developer\",\n    status: \"Active\",\n  },\n  {\n    id: \"2\",\n    name: \"Jane Smith\",\n    email: \"jane@example.com\",\n    role: \"Designer\",\n    status: \"Active\",\n  },\n  {\n    id: \"3\",\n    name: \"Bob Johnson\",\n    email: \"bob@example.com\",\n    role: \"Manager\",\n    status: \"Inactive\",\n  },\n  {\n    id: \"4\",\n    name: \"Alice Williams\",\n    email: \"alice@example.com\",\n    role: \"Developer\",\n    status: \"Active\",\n  },\n  {\n    id: \"5\",\n    name: \"Charlie Brown\",\n    email: \"charlie@example.com\",\n    role: \"Designer\",\n    status: \"Active\",\n  },\n];\n\nconst columns: ColumnDef<User>[] = [\n  {\n    accessorKey: \"name\",\n    header: \"Name\",\n    cell: ({ row }) => (\n      <div className=\"font-medium\">{row.getValue(\"name\")}</div>\n    ),\n  },\n  {\n    accessorKey: \"email\",\n    header: \"Email\",\n    cell: ({ row }) => <div className=\"lowercase\">{row.getValue(\"email\")}</div>,\n  },\n  {\n    accessorKey: \"role\",\n    header: \"Role\",\n    cell: ({ row }) => <div>{row.getValue(\"role\")}</div>,\n  },\n  {\n    accessorKey: \"status\",\n    header: \"Status\",\n    cell: ({ row }) => <div>{row.getValue(\"status\")}</div>,\n  },\n];\n\nconst Example = () => {\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>(\n    []\n  );\n\n  const table = useReactTable({\n    data,\n    columns,\n    onColumnFiltersChange: setColumnFilters,\n    getCoreRowModel: getCoreRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    state: {\n      columnFilters,\n    },\n  });\n\n  return (\n    <div className=\"w-full max-w-4xl\">\n      <div className=\"flex items-center gap-4 py-4\">\n        <Input\n          className=\"max-w-xs bg-background\"\n          onChange={(event) =>\n            table.getColumn(\"name\")?.setFilterValue(event.target.value)\n          }\n          placeholder=\"Filter by name...\"\n          value={(table.getColumn(\"name\")?.getFilterValue() as string) ?? \"\"}\n        />\n        <Input\n          className=\"max-w-xs bg-background\"\n          onChange={(event) =>\n            table.getColumn(\"email\")?.setFilterValue(event.target.value)\n          }\n          placeholder=\"Filter by email...\"\n          value={(table.getColumn(\"email\")?.getFilterValue() as string) ?? \"\"}\n        />\n      </div>\n      <div className=\"rounded-md border bg-background\">\n        <Table>\n          <TableHeader>\n            {table.getHeaderGroups().map((headerGroup) => (\n              <TableRow key={headerGroup.id}>\n                {headerGroup.headers.map((header) => (\n                  <TableHead key={header.id}>\n                    {header.isPlaceholder\n                      ? null\n                      : flexRender(\n                          header.column.columnDef.header,\n                          header.getContext()\n                        )}\n                  </TableHead>\n                ))}\n              </TableRow>\n            ))}\n          </TableHeader>\n          <TableBody>\n            {table.getRowModel().rows?.length ? (\n              table.getRowModel().rows.map((row) => (\n                <TableRow key={row.id}>\n                  {row.getVisibleCells().map((cell) => (\n                    <TableCell key={cell.id}>\n                      {flexRender(\n                        cell.column.columnDef.cell,\n                        cell.getContext()\n                      )}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            ) : (\n              <TableRow>\n                <TableCell\n                  className=\"h-24 text-center\"\n                  colSpan={columns.length}\n                >\n                  No results.\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </div>\n    </div>\n  );\n};\n\nexport default Example;\n",
      "type": "registry:component"
    }
  ]
}