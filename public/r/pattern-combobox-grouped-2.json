{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pattern-combobox-grouped-2",
  "type": "registry:component",
  "title": "Combobox Grouped 2",
  "description": "A combobox pattern: combobox-grouped-2",
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/patterns/combobox/grouped/combobox-grouped-2.tsx",
      "content": "\"use client\";\n\nimport { Check, ChevronsUpDown } from \"lucide-react\";\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n  CommandSeparator,\n} from \"@/components/ui/command\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport { cn } from \"@/lib/utils\";\n\nexport const title = \"Categories with Separators\";\n\nconst categories = {\n  primary: [\n    { value: \"home\", label: \"Home\" },\n    { value: \"dashboard\", label: \"Dashboard\" },\n  ],\n  secondary: [\n    { value: \"settings\", label: \"Settings\" },\n    { value: \"profile\", label: \"Profile\" },\n  ],\n  other: [\n    { value: \"help\", label: \"Help\" },\n    { value: \"logout\", label: \"Logout\" },\n  ],\n};\n\nconst Example = () => {\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(\"\");\n\n  return (\n    <Popover onOpenChange={setOpen} open={open}>\n      <PopoverTrigger asChild>\n        <Button\n          aria-expanded={open}\n          className=\"w-[200px] justify-between\"\n          role=\"combobox\"\n          variant=\"outline\"\n        >\n          {value\n            ? Object.values(categories)\n                .flat()\n                .find((item) => item.value === value)?.label\n            : \"Select page...\"}\n          <ChevronsUpDown className=\"ml-2 size-4 shrink-0 opacity-50\" />\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-[200px] p-0\">\n        <Command>\n          <CommandInput placeholder=\"Search...\" />\n          <CommandList>\n            <CommandEmpty>No page found.</CommandEmpty>\n            <CommandGroup>\n              {categories.primary.map((item) => (\n                <CommandItem\n                  key={item.value}\n                  onSelect={(currentValue) => {\n                    setValue(currentValue === value ? \"\" : currentValue);\n                    setOpen(false);\n                  }}\n                  value={item.value}\n                >\n                  <Check\n                    className={cn(\n                      \"mr-2 size-4\",\n                      value === item.value ? \"opacity-100\" : \"opacity-0\"\n                    )}\n                  />\n                  {item.label}\n                </CommandItem>\n              ))}\n            </CommandGroup>\n            <CommandSeparator />\n            <CommandGroup>\n              {categories.secondary.map((item) => (\n                <CommandItem\n                  key={item.value}\n                  onSelect={(currentValue) => {\n                    setValue(currentValue === value ? \"\" : currentValue);\n                    setOpen(false);\n                  }}\n                  value={item.value}\n                >\n                  <Check\n                    className={cn(\n                      \"mr-2 size-4\",\n                      value === item.value ? \"opacity-100\" : \"opacity-0\"\n                    )}\n                  />\n                  {item.label}\n                </CommandItem>\n              ))}\n            </CommandGroup>\n            <CommandSeparator />\n            <CommandGroup>\n              {categories.other.map((item) => (\n                <CommandItem\n                  key={item.value}\n                  onSelect={(currentValue) => {\n                    setValue(currentValue === value ? \"\" : currentValue);\n                    setOpen(false);\n                  }}\n                  value={item.value}\n                >\n                  <Check\n                    className={cn(\n                      \"mr-2 size-4\",\n                      value === item.value ? \"opacity-100\" : \"opacity-0\"\n                    )}\n                  />\n                  {item.label}\n                </CommandItem>\n              ))}\n            </CommandGroup>\n          </CommandList>\n        </Command>\n      </PopoverContent>\n    </Popover>\n  );\n};\n\nexport default Example;\n",
      "type": "registry:component"
    }
  ]
}