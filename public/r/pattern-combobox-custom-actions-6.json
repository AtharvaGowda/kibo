{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pattern-combobox-custom-actions-6",
  "type": "registry:component",
  "title": "Combobox Custom Actions 6",
  "description": "A combobox pattern: combobox-custom-actions-6",
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/patterns/combobox/custom-actions/combobox-custom-actions-6.tsx",
      "content": "\"use client\";\n\nimport { Check, ChevronsUpDown } from \"lucide-react\";\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n} from \"@/components/ui/command\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport { cn } from \"@/lib/utils\";\n\nexport const title = \"Keyboard Shortcuts Displayed\";\n\nconst commands = [\n  { value: \"copy\", label: \"Copy\", shortcut: \"⌘C\" },\n  { value: \"paste\", label: \"Paste\", shortcut: \"⌘V\" },\n  { value: \"cut\", label: \"Cut\", shortcut: \"⌘X\" },\n  { value: \"undo\", label: \"Undo\", shortcut: \"⌘Z\" },\n  { value: \"redo\", label: \"Redo\", shortcut: \"⌘⇧Z\" },\n];\n\nconst Example = () => {\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(\"\");\n\n  return (\n    <Popover onOpenChange={setOpen} open={open}>\n      <PopoverTrigger asChild>\n        <Button\n          aria-expanded={open}\n          className=\"w-[250px] justify-between\"\n          role=\"combobox\"\n          variant=\"outline\"\n        >\n          {value\n            ? commands.find((cmd) => cmd.value === value)?.label\n            : \"Select command...\"}\n          <ChevronsUpDown className=\"ml-2 size-4 shrink-0 opacity-50\" />\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-[250px] p-0\">\n        <Command>\n          <CommandInput placeholder=\"Search commands...\" />\n          <CommandList>\n            <CommandEmpty>No command found.</CommandEmpty>\n            <CommandGroup>\n              {commands.map((cmd) => (\n                <CommandItem\n                  className=\"flex items-center justify-between\"\n                  key={cmd.value}\n                  onSelect={(currentValue) => {\n                    setValue(currentValue === value ? \"\" : currentValue);\n                    setOpen(false);\n                  }}\n                  value={cmd.value}\n                >\n                  <div className=\"flex items-center\">\n                    <Check\n                      className={cn(\n                        \"mr-2 size-4\",\n                        value === cmd.value ? \"opacity-100\" : \"opacity-0\"\n                      )}\n                    />\n                    {cmd.label}\n                  </div>\n                  <kbd className=\"pointer-events-none inline-flex h-5 select-none items-center gap-1 rounded border bg-muted px-1.5 font-medium font-mono text-muted-foreground text-xs opacity-100\">\n                    {cmd.shortcut}\n                  </kbd>\n                </CommandItem>\n              ))}\n            </CommandGroup>\n          </CommandList>\n        </Command>\n      </PopoverContent>\n    </Popover>\n  );\n};\n\nexport default Example;\n",
      "type": "registry:component"
    }
  ]
}