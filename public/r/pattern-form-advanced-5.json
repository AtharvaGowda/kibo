{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pattern-form-advanced-5",
  "type": "registry:component",
  "title": "Form Advanced 5",
  "description": "A form pattern: form-advanced-5",
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/patterns/form/advanced/form-advanced-5.tsx",
      "content": "\"use client\";\n\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n} from \"@/components/ui/form\";\nimport { Switch } from \"@/components/ui/switch\";\n\nexport const title = \"Form with Switch\";\n\nconst formSchema = z.object({\n  emailNotifications: z.boolean().default(false),\n  pushNotifications: z.boolean().default(false),\n  desktopNotifications: z.boolean().default(false),\n});\n\nconst Example = () => {\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      emailNotifications: true,\n      pushNotifications: false,\n      desktopNotifications: true,\n    },\n  });\n\n  function onSubmit(values: z.infer<typeof formSchema>) {\n    console.log(values);\n  }\n\n  return (\n    <div className=\"w-full max-w-md\">\n      <Form {...form}>\n        <form className=\"space-y-6\" onSubmit={form.handleSubmit(onSubmit)}>\n          <div>\n            <h3 className=\"mb-4 font-medium text-lg\">Notification Settings</h3>\n            <div className=\"space-y-4\">\n              <FormField\n                control={form.control}\n                name=\"emailNotifications\"\n                render={({ field }) => (\n                  <FormItem className=\"flex flex-row items-center justify-between rounded-lg border p-4\">\n                    <div className=\"space-y-0.5\">\n                      <FormLabel className=\"text-base\">\n                        Email Notifications\n                      </FormLabel>\n                      <FormDescription>\n                        Receive notifications via email.\n                      </FormDescription>\n                    </div>\n                    <FormControl>\n                      <Switch\n                        checked={field.value}\n                        onCheckedChange={field.onChange}\n                      />\n                    </FormControl>\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name=\"pushNotifications\"\n                render={({ field }) => (\n                  <FormItem className=\"flex flex-row items-center justify-between rounded-lg border p-4\">\n                    <div className=\"space-y-0.5\">\n                      <FormLabel className=\"text-base\">\n                        Push Notifications\n                      </FormLabel>\n                      <FormDescription>\n                        Receive push notifications on your device.\n                      </FormDescription>\n                    </div>\n                    <FormControl>\n                      <Switch\n                        checked={field.value}\n                        onCheckedChange={field.onChange}\n                      />\n                    </FormControl>\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name=\"desktopNotifications\"\n                render={({ field }) => (\n                  <FormItem className=\"flex flex-row items-center justify-between rounded-lg border p-4\">\n                    <div className=\"space-y-0.5\">\n                      <FormLabel className=\"text-base\">\n                        Desktop Notifications\n                      </FormLabel>\n                      <FormDescription>\n                        Receive notifications on your desktop.\n                      </FormDescription>\n                    </div>\n                    <FormControl>\n                      <Switch\n                        checked={field.value}\n                        onCheckedChange={field.onChange}\n                      />\n                    </FormControl>\n                  </FormItem>\n                )}\n              />\n            </div>\n          </div>\n          <Button type=\"submit\">Save Preferences</Button>\n        </form>\n      </Form>\n    </div>\n  );\n};\n\nexport default Example;\n",
      "type": "registry:component"
    }
  ]
}