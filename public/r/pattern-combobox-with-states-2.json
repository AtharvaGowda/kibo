{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pattern-combobox-with-states-2",
  "type": "registry:component",
  "title": "Combobox With States 2",
  "description": "A combobox pattern: combobox-with-states-2",
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/patterns/combobox/with-states/combobox-with-states-2.tsx",
      "content": "\"use client\";\n\nimport { AlertCircle, Check, ChevronsUpDown, RefreshCw } from \"lucide-react\";\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n} from \"@/components/ui/command\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport { cn } from \"@/lib/utils\";\n\nexport const title = \"Error State with Retry\";\n\nconst Example = () => {\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(\"\");\n  const [hasError, setHasError] = useState(true);\n\n  const handleRetry = () => {\n    setHasError(false);\n  };\n\n  return (\n    <Popover onOpenChange={setOpen} open={open}>\n      <PopoverTrigger asChild>\n        <Button\n          aria-expanded={open}\n          className=\"w-[200px] justify-between\"\n          role=\"combobox\"\n          variant=\"outline\"\n        >\n          {value || \"Select option...\"}\n          <ChevronsUpDown className=\"ml-2 size-4 shrink-0 opacity-50\" />\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-[200px] p-0\">\n        <Command>\n          <CommandInput placeholder=\"Search...\" />\n          <CommandList>\n            {hasError ? (\n              <div className=\"flex flex-col items-center gap-3 p-4 text-center\">\n                <AlertCircle className=\"size-8 text-destructive\" />\n                <div>\n                  <p className=\"font-medium text-sm\">Failed to load</p>\n                  <p className=\"text-muted-foreground text-xs\">\n                    Could not fetch data\n                  </p>\n                </div>\n                <Button\n                  className=\"w-full\"\n                  onClick={handleRetry}\n                  size=\"sm\"\n                  variant=\"outline\"\n                >\n                  <RefreshCw className=\"mr-2 size-3\" />\n                  Retry\n                </Button>\n              </div>\n            ) : (\n              <>\n                <CommandEmpty>No results found.</CommandEmpty>\n                <CommandGroup>\n                  {[\"Option 1\", \"Option 2\", \"Option 3\"].map((option) => (\n                    <CommandItem\n                      key={option}\n                      onSelect={(currentValue) => {\n                        setValue(currentValue === value ? \"\" : currentValue);\n                        setOpen(false);\n                      }}\n                      value={option}\n                    >\n                      <Check\n                        className={cn(\n                          \"mr-2 size-4\",\n                          value === option ? \"opacity-100\" : \"opacity-0\"\n                        )}\n                      />\n                      {option}\n                    </CommandItem>\n                  ))}\n                </CommandGroup>\n              </>\n            )}\n          </CommandList>\n        </Command>\n      </PopoverContent>\n    </Popover>\n  );\n};\n\nexport default Example;\n",
      "type": "registry:component"
    }
  ]
}