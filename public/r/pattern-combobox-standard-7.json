{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pattern-combobox-standard-7",
  "type": "registry:component",
  "title": "Combobox Standard 7",
  "description": "A combobox pattern: combobox-standard-7",
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/patterns/combobox/standard/combobox-standard-7.tsx",
      "content": "\"use client\";\n\nimport { Check, ChevronsUpDown } from \"lucide-react\";\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n} from \"@/components/ui/command\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport { cn } from \"@/lib/utils\";\n\nexport const title = \"Full Width Variant\";\n\nconst countries = [\n  { value: \"us\", label: \"United States\" },\n  { value: \"uk\", label: \"United Kingdom\" },\n  { value: \"ca\", label: \"Canada\" },\n  { value: \"au\", label: \"Australia\" },\n  { value: \"de\", label: \"Germany\" },\n];\n\nconst Example = () => {\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(\"\");\n\n  return (\n    <div className=\"w-full\">\n      <Popover onOpenChange={setOpen} open={open}>\n        <PopoverTrigger asChild>\n          <Button\n            aria-expanded={open}\n            className=\"w-full justify-between\"\n            role=\"combobox\"\n            variant=\"outline\"\n          >\n            {value\n              ? countries.find((country) => country.value === value)?.label\n              : \"Select country...\"}\n            <ChevronsUpDown className=\"ml-2 size-4 shrink-0 opacity-50\" />\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent className=\"w-full p-0\">\n          <Command>\n            <CommandInput placeholder=\"Search country...\" />\n            <CommandList>\n              <CommandEmpty>No country found.</CommandEmpty>\n              <CommandGroup>\n                {countries.map((country) => (\n                  <CommandItem\n                    key={country.value}\n                    onSelect={(currentValue) => {\n                      setValue(currentValue === value ? \"\" : currentValue);\n                      setOpen(false);\n                    }}\n                    value={country.value}\n                  >\n                    <Check\n                      className={cn(\n                        \"mr-2 size-4\",\n                        value === country.value ? \"opacity-100\" : \"opacity-0\"\n                      )}\n                    />\n                    {country.label}\n                  </CommandItem>\n                ))}\n              </CommandGroup>\n            </CommandList>\n          </Command>\n        </PopoverContent>\n      </Popover>\n    </div>\n  );\n};\n\nexport default Example;\n",
      "type": "registry:component"
    }
  ]
}