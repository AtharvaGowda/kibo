{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pattern-combobox-grouped-4",
  "type": "registry:component",
  "title": "Combobox Grouped 4",
  "description": "A combobox pattern: combobox-grouped-4",
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/patterns/combobox/grouped/combobox-grouped-4.tsx",
      "content": "\"use client\";\n\nimport { Check, ChevronsUpDown } from \"lucide-react\";\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n} from \"@/components/ui/command\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport { cn } from \"@/lib/utils\";\n\nexport const title = \"Groups with Item Counts\";\n\nconst roles = {\n  development: [\n    { value: \"frontend-dev\", label: \"Frontend Developer\" },\n    { value: \"backend-dev\", label: \"Backend Developer\" },\n    { value: \"fullstack-dev\", label: \"Fullstack Developer\" },\n  ],\n  design: [\n    { value: \"ui-designer\", label: \"UI Designer\" },\n    { value: \"ux-designer\", label: \"UX Designer\" },\n  ],\n  management: [\n    { value: \"product-manager\", label: \"Product Manager\" },\n    { value: \"project-manager\", label: \"Project Manager\" },\n    { value: \"engineering-manager\", label: \"Engineering Manager\" },\n  ],\n};\n\nconst Example = () => {\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(\"\");\n\n  return (\n    <Popover onOpenChange={setOpen} open={open}>\n      <PopoverTrigger asChild>\n        <Button\n          aria-expanded={open}\n          className=\"w-[250px] justify-between\"\n          role=\"combobox\"\n          variant=\"outline\"\n        >\n          {value\n            ? Object.values(roles)\n                .flat()\n                .find((item) => item.value === value)?.label\n            : \"Select role...\"}\n          <ChevronsUpDown className=\"ml-2 size-4 shrink-0 opacity-50\" />\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-[250px] p-0\">\n        <Command>\n          <CommandInput placeholder=\"Search role...\" />\n          <CommandList>\n            <CommandEmpty>No role found.</CommandEmpty>\n            {Object.entries(roles).map(([category, items]) => (\n              <CommandGroup\n                heading={\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"capitalize\">{category}</span>\n                    <span className=\"text-muted-foreground text-xs\">\n                      {items.length}\n                    </span>\n                  </div>\n                }\n                key={category}\n              >\n                {items.map((item) => (\n                  <CommandItem\n                    key={item.value}\n                    onSelect={(currentValue) => {\n                      setValue(currentValue === value ? \"\" : currentValue);\n                      setOpen(false);\n                    }}\n                    value={item.value}\n                  >\n                    <Check\n                      className={cn(\n                        \"mr-2 size-4\",\n                        value === item.value ? \"opacity-100\" : \"opacity-0\"\n                      )}\n                    />\n                    {item.label}\n                  </CommandItem>\n                ))}\n              </CommandGroup>\n            ))}\n          </CommandList>\n        </Command>\n      </PopoverContent>\n    </Popover>\n  );\n};\n\nexport default Example;\n",
      "type": "registry:component"
    }
  ]
}