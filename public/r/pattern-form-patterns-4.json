{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pattern-form-patterns-4",
  "type": "registry:component",
  "title": "Form Patterns 4",
  "description": "A form pattern: form-patterns-4",
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/patterns/form/patterns/form-patterns-4.tsx",
      "content": "\"use client\";\n\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Textarea } from \"@/components/ui/textarea\";\n\nexport const title = \"Contact Form\";\n\nconst formSchema = z.object({\n  name: z.string().min(2, {\n    message: \"Name must be at least 2 characters.\",\n  }),\n  email: z.string().email({\n    message: \"Please enter a valid email address.\",\n  }),\n  subject: z.string({\n    required_error: \"Please select a subject.\",\n  }),\n  message: z.string().min(10, {\n    message: \"Message must be at least 10 characters.\",\n  }),\n});\n\nconst Example = () => {\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      name: \"\",\n      email: \"\",\n      message: \"\",\n    },\n  });\n\n  function onSubmit(values: z.infer<typeof formSchema>) {\n    console.log(values);\n  }\n\n  return (\n    <div className=\"w-full max-w-md\">\n      <Form {...form}>\n        <form className=\"space-y-4\" onSubmit={form.handleSubmit(onSubmit)}>\n          <div className=\"space-y-2\">\n            <h2 className=\"font-bold text-2xl\">Get in touch</h2>\n            <p className=\"text-muted-foreground text-sm\">\n              We'll get back to you within 24 hours\n            </p>\n          </div>\n          <FormField\n            control={form.control}\n            name=\"name\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Name</FormLabel>\n                <FormControl>\n                  <Input\n                    className=\"bg-background\"\n                    placeholder=\"John Doe\"\n                    {...field}\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"email\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Email</FormLabel>\n                <FormControl>\n                  <Input\n                    className=\"bg-background\"\n                    placeholder=\"you@example.com\"\n                    type=\"email\"\n                    {...field}\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"subject\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Subject</FormLabel>\n                <Select\n                  defaultValue={field.value}\n                  onValueChange={field.onChange}\n                >\n                  <FormControl>\n                    <SelectTrigger className=\"bg-background\">\n                      <SelectValue placeholder=\"Select a subject\" />\n                    </SelectTrigger>\n                  </FormControl>\n                  <SelectContent>\n                    <SelectItem value=\"general\">General Inquiry</SelectItem>\n                    <SelectItem value=\"support\">Technical Support</SelectItem>\n                    <SelectItem value=\"sales\">Sales</SelectItem>\n                    <SelectItem value=\"feedback\">Feedback</SelectItem>\n                    <SelectItem value=\"other\">Other</SelectItem>\n                  </SelectContent>\n                </Select>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"message\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Message</FormLabel>\n                <FormControl>\n                  <Textarea\n                    className=\"resize-none bg-background\"\n                    placeholder=\"How can we help you?\"\n                    rows={5}\n                    {...field}\n                  />\n                </FormControl>\n                <FormDescription>\n                  Please provide as much detail as possible.\n                </FormDescription>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <Button className=\"w-full\" type=\"submit\">\n            Send Message\n          </Button>\n        </form>\n      </Form>\n    </div>\n  );\n};\n\nexport default Example;\n",
      "type": "registry:component"
    }
  ]
}