{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pattern-form-advanced-7",
  "type": "registry:component",
  "title": "Form Advanced 7",
  "description": "A form pattern: form-advanced-7",
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/patterns/form/advanced/form-advanced-7.tsx",
      "content": "\"use client\";\n\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { Textarea } from \"@/components/ui/textarea\";\n\nexport const title = \"Form with Mixed Controls\";\n\nconst formSchema = z.object({\n  name: z.string().min(2),\n  type: z.enum([\"bug\", \"feature\", \"question\"]),\n  priority: z.string(),\n  description: z.string().min(10),\n  subscribe: z.boolean().default(false),\n});\n\nconst Example = () => {\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      name: \"\",\n      description: \"\",\n      subscribe: false,\n    },\n  });\n\n  function onSubmit(values: z.infer<typeof formSchema>) {\n    console.log(values);\n  }\n\n  return (\n    <div className=\"w-full max-w-md\">\n      <Form {...form}>\n        <form className=\"space-y-4\" onSubmit={form.handleSubmit(onSubmit)}>\n          <FormField\n            control={form.control}\n            name=\"name\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Title</FormLabel>\n                <FormControl>\n                  <Input\n                    className=\"bg-background\"\n                    placeholder=\"Enter title\"\n                    {...field}\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"type\"\n            render={({ field }) => (\n              <FormItem className=\"space-y-3\">\n                <FormLabel>Type</FormLabel>\n                <FormControl>\n                  <RadioGroup\n                    className=\"flex flex-col space-y-1\"\n                    defaultValue={field.value}\n                    onValueChange={field.onChange}\n                  >\n                    <FormItem className=\"flex items-center space-x-3 space-y-0\">\n                      <FormControl>\n                        <RadioGroupItem value=\"bug\" />\n                      </FormControl>\n                      <FormLabel className=\"font-normal\">Bug Report</FormLabel>\n                    </FormItem>\n                    <FormItem className=\"flex items-center space-x-3 space-y-0\">\n                      <FormControl>\n                        <RadioGroupItem value=\"feature\" />\n                      </FormControl>\n                      <FormLabel className=\"font-normal\">\n                        Feature Request\n                      </FormLabel>\n                    </FormItem>\n                    <FormItem className=\"flex items-center space-x-3 space-y-0\">\n                      <FormControl>\n                        <RadioGroupItem value=\"question\" />\n                      </FormControl>\n                      <FormLabel className=\"font-normal\">Question</FormLabel>\n                    </FormItem>\n                  </RadioGroup>\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"priority\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Priority</FormLabel>\n                <Select\n                  defaultValue={field.value}\n                  onValueChange={field.onChange}\n                >\n                  <FormControl>\n                    <SelectTrigger className=\"bg-background\">\n                      <SelectValue placeholder=\"Select priority\" />\n                    </SelectTrigger>\n                  </FormControl>\n                  <SelectContent>\n                    <SelectItem value=\"low\">Low</SelectItem>\n                    <SelectItem value=\"medium\">Medium</SelectItem>\n                    <SelectItem value=\"high\">High</SelectItem>\n                    <SelectItem value=\"urgent\">Urgent</SelectItem>\n                  </SelectContent>\n                </Select>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"description\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Description</FormLabel>\n                <FormControl>\n                  <Textarea\n                    className=\"resize-none bg-background\"\n                    placeholder=\"Describe your issue\"\n                    rows={4}\n                    {...field}\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"subscribe\"\n            render={({ field }) => (\n              <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\n                <FormControl>\n                  <Checkbox\n                    checked={field.value}\n                    onCheckedChange={field.onChange}\n                  />\n                </FormControl>\n                <div className=\"space-y-1 leading-none\">\n                  <FormLabel>Subscribe to updates</FormLabel>\n                  <FormDescription>\n                    Get notified about responses to your submission.\n                  </FormDescription>\n                </div>\n              </FormItem>\n            )}\n          />\n          <Button type=\"submit\">Submit</Button>\n        </form>\n      </Form>\n    </div>\n  );\n};\n\nexport default Example;\n",
      "type": "registry:component"
    }
  ]
}