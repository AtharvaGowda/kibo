{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pattern-combobox-multi-select-4",
  "type": "registry:component",
  "title": "Combobox Multi Select 4",
  "description": "A combobox pattern: combobox-multi-select-4",
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/patterns/combobox/multi-select/combobox-multi-select-4.tsx",
      "content": "\"use client\";\n\nimport { ChevronsUpDown } from \"lucide-react\";\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n} from \"@/components/ui/command\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\n\nexport const title = \"With Checkboxes Visible\";\n\nconst categories = [\n  { value: \"electronics\", label: \"Electronics\" },\n  { value: \"clothing\", label: \"Clothing\" },\n  { value: \"books\", label: \"Books\" },\n  { value: \"sports\", label: \"Sports\" },\n  { value: \"home\", label: \"Home & Garden\" },\n];\n\nconst Example = () => {\n  const [open, setOpen] = useState(false);\n  const [selectedValues, setSelectedValues] = useState<string[]>([]);\n\n  return (\n    <Popover onOpenChange={setOpen} open={open}>\n      <PopoverTrigger asChild>\n        <Button\n          aria-expanded={open}\n          className=\"w-[250px] justify-between\"\n          role=\"combobox\"\n          variant=\"outline\"\n        >\n          {selectedValues.length > 0\n            ? `${selectedValues.length} categor${selectedValues.length > 1 ? \"ies\" : \"y\"}`\n            : \"Select categories...\"}\n          <ChevronsUpDown className=\"ml-2 size-4 shrink-0 opacity-50\" />\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-[250px] p-0\">\n        <Command>\n          <CommandInput placeholder=\"Search categories...\" />\n          <CommandList>\n            <CommandEmpty>No category found.</CommandEmpty>\n            <CommandGroup>\n              {categories.map((category) => (\n                <CommandItem\n                  key={category.value}\n                  onSelect={(currentValue) => {\n                    setSelectedValues(\n                      selectedValues.includes(currentValue)\n                        ? selectedValues.filter((v) => v !== currentValue)\n                        : [...selectedValues, currentValue]\n                    );\n                  }}\n                  value={category.value}\n                >\n                  <Checkbox\n                    checked={selectedValues.includes(category.value)}\n                    className=\"mr-2\"\n                  />\n                  {category.label}\n                </CommandItem>\n              ))}\n            </CommandGroup>\n          </CommandList>\n        </Command>\n      </PopoverContent>\n    </Popover>\n  );\n};\n\nexport default Example;\n",
      "type": "registry:component"
    }
  ]
}