{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pattern-date-picker-standard-5",
  "type": "registry:component",
  "title": "Date Picker Standard 5",
  "description": "A date-picker pattern: date-picker-standard-5",
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/patterns/date-picker/standard/date-picker-standard-5.tsx",
      "content": "\"use client\";\n\nimport { format } from \"date-fns\";\nimport { CalendarIcon } from \"lucide-react\";\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { cn } from \"@/lib/utils\";\n\nexport const title = \"Date Picker with Natural Language\";\n\nconst Example = () => {\n  const [date, setDate] = useState<Date | undefined>(new Date());\n\n  const shortcuts = [\n    { label: \"Today\", date: new Date() },\n    {\n      label: \"Tomorrow\",\n      date: new Date(new Date().setDate(new Date().getDate() + 1)),\n    },\n    {\n      label: \"In 3 days\",\n      date: new Date(new Date().setDate(new Date().getDate() + 3)),\n    },\n    {\n      label: \"In a week\",\n      date: new Date(new Date().setDate(new Date().getDate() + 7)),\n    },\n    {\n      label: \"In 2 weeks\",\n      date: new Date(new Date().setDate(new Date().getDate() + 14)),\n    },\n    {\n      label: \"In a month\",\n      date: new Date(new Date().setMonth(new Date().getMonth() + 1)),\n    },\n  ];\n\n  return (\n    <Popover>\n      <PopoverTrigger asChild>\n        <Button\n          className={cn(\n            \"w-[280px] justify-start text-left font-normal\",\n            !date && \"text-muted-foreground\"\n          )}\n          variant=\"outline\"\n        >\n          <CalendarIcon className=\"mr-2 h-4 w-4\" />\n          {date ? format(date, \"PPP\") : <span>Pick a date</span>}\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent align=\"start\" className=\"w-auto p-0\">\n        <div className=\"flex divide-x overflow-hidden bg-background\">\n          <Calendar mode=\"single\" onSelect={setDate} selected={date} />\n          <div className=\"relative w-[249px] overflow-hidden\">\n            <div className=\"absolute inset-0 grid gap-4\">\n              <div className=\"space-y-2 px-4 pt-4\">\n                <p className=\"text-center font-medium text-sm\">Quick Select</p>\n              </div>\n              <ScrollArea className=\"h-full overflow-y-auto\">\n                <div className=\"grid grid-cols-1 gap-2 px-4 pb-4\">\n                  {shortcuts.map((shortcut) => (\n                    <Button\n                      key={shortcut.label}\n                      onClick={() => setDate(new Date(shortcut.date))}\n                      size=\"sm\"\n                      variant=\"outline\"\n                    >\n                      {shortcut.label}\n                    </Button>\n                  ))}\n                </div>\n              </ScrollArea>\n            </div>\n          </div>\n        </div>\n      </PopoverContent>\n    </Popover>\n  );\n};\n\nexport default Example;\n",
      "type": "registry:component"
    }
  ]
}