{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pattern-combobox-with-states-3",
  "type": "registry:component",
  "title": "Combobox With States 3",
  "description": "A combobox pattern: combobox-with-states-3",
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/patterns/combobox/with-states/combobox-with-states-3.tsx",
      "content": "\"use client\";\n\nimport { Check, ChevronsUpDown, Inbox, Plus } from \"lucide-react\";\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n} from \"@/components/ui/command\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport { cn } from \"@/lib/utils\";\n\nexport const title = \"Empty State with Action\";\n\nconst Example = () => {\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(\"\");\n  const [items, setItems] = useState<string[]>([]);\n\n  const handleCreate = () => {\n    setItems([\"New Item 1\", \"New Item 2\", \"New Item 3\"]);\n  };\n\n  return (\n    <Popover onOpenChange={setOpen} open={open}>\n      <PopoverTrigger asChild>\n        <Button\n          aria-expanded={open}\n          className=\"w-[250px] justify-between\"\n          role=\"combobox\"\n          variant=\"outline\"\n        >\n          {value || \"Select item...\"}\n          <ChevronsUpDown className=\"ml-2 size-4 shrink-0 opacity-50\" />\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-[250px] p-0\">\n        <Command>\n          <CommandInput placeholder=\"Search items...\" />\n          <CommandList>\n            {items.length === 0 ? (\n              <div className=\"flex flex-col items-center gap-3 p-6 text-center\">\n                <Inbox className=\"size-12 text-muted-foreground\" />\n                <div>\n                  <p className=\"font-medium text-sm\">No items yet</p>\n                  <p className=\"text-muted-foreground text-xs\">\n                    Get started by creating your first item\n                  </p>\n                </div>\n                <Button className=\"w-full\" onClick={handleCreate} size=\"sm\">\n                  <Plus className=\"mr-2 size-4\" />\n                  Create Item\n                </Button>\n              </div>\n            ) : (\n              <>\n                <CommandEmpty>No results found.</CommandEmpty>\n                <CommandGroup>\n                  {items.map((item) => (\n                    <CommandItem\n                      key={item}\n                      onSelect={(currentValue) => {\n                        setValue(currentValue === value ? \"\" : currentValue);\n                        setOpen(false);\n                      }}\n                      value={item}\n                    >\n                      <Check\n                        className={cn(\n                          \"mr-2 size-4\",\n                          value === item ? \"opacity-100\" : \"opacity-0\"\n                        )}\n                      />\n                      {item}\n                    </CommandItem>\n                  ))}\n                </CommandGroup>\n              </>\n            )}\n          </CommandList>\n        </Command>\n      </PopoverContent>\n    </Popover>\n  );\n};\n\nexport default Example;\n",
      "type": "registry:component"
    }
  ]
}