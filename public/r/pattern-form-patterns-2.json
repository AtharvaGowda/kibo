{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pattern-form-patterns-2",
  "type": "registry:component",
  "title": "Form Patterns 2",
  "description": "A form pattern: form-patterns-2",
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/patterns/form/patterns/form-patterns-2.tsx",
      "content": "\"use client\";\n\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\n\nexport const title = \"Signup Form\";\n\nconst formSchema = z.object({\n  fullName: z.string().min(2, {\n    message: \"Name must be at least 2 characters.\",\n  }),\n  email: z.string().email({\n    message: \"Please enter a valid email address.\",\n  }),\n  password: z\n    .string()\n    .min(8, {\n      message: \"Password must be at least 8 characters.\",\n    })\n    .regex(/[A-Z]/, \"Password must contain at least one uppercase letter\")\n    .regex(/[a-z]/, \"Password must contain at least one lowercase letter\")\n    .regex(/[0-9]/, \"Password must contain at least one number\"),\n  terms: z.boolean().refine((val) => val === true, {\n    message: \"You must accept the terms and conditions.\",\n  }),\n});\n\nconst Example = () => {\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      fullName: \"\",\n      email: \"\",\n      password: \"\",\n      terms: false,\n    },\n  });\n\n  function onSubmit(values: z.infer<typeof formSchema>) {\n    console.log(values);\n  }\n\n  return (\n    <div className=\"w-full max-w-sm\">\n      <Form {...form}>\n        <form className=\"space-y-4\" onSubmit={form.handleSubmit(onSubmit)}>\n          <div className=\"space-y-2 text-center\">\n            <h1 className=\"font-bold text-2xl\">Create an account</h1>\n            <p className=\"text-muted-foreground text-sm\">\n              Sign up to get started with our platform\n            </p>\n          </div>\n          <FormField\n            control={form.control}\n            name=\"fullName\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Full Name</FormLabel>\n                <FormControl>\n                  <Input\n                    className=\"bg-background\"\n                    placeholder=\"John Doe\"\n                    {...field}\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"email\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Email</FormLabel>\n                <FormControl>\n                  <Input\n                    className=\"bg-background\"\n                    placeholder=\"you@example.com\"\n                    type=\"email\"\n                    {...field}\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"password\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Password</FormLabel>\n                <FormControl>\n                  <Input\n                    className=\"bg-background\"\n                    placeholder=\"Create a strong password\"\n                    type=\"password\"\n                    {...field}\n                  />\n                </FormControl>\n                <FormDescription className=\"text-xs\">\n                  Must contain uppercase, lowercase, and number\n                </FormDescription>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"terms\"\n            render={({ field }) => (\n              <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\n                <FormControl>\n                  <Checkbox\n                    checked={field.value}\n                    onCheckedChange={field.onChange}\n                  />\n                </FormControl>\n                <div className=\"space-y-1 leading-none\">\n                  <FormLabel className=\"font-normal text-sm\">\n                    I agree to the{\" \"}\n                    <a className=\"hover:underline\" href=\"#\">\n                      terms and conditions\n                    </a>\n                  </FormLabel>\n                  <FormMessage />\n                </div>\n              </FormItem>\n            )}\n          />\n          <Button className=\"w-full\" type=\"submit\">\n            Create Account\n          </Button>\n          <p className=\"text-center text-muted-foreground text-sm\">\n            Already have an account?{\" \"}\n            <a className=\"hover:underline\" href=\"#\">\n              Sign in\n            </a>\n          </p>\n        </form>\n      </Form>\n    </div>\n  );\n};\n\nexport default Example;\n",
      "type": "registry:component"
    }
  ]
}