{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pattern-combobox-rich-content-3",
  "type": "registry:component",
  "title": "Combobox Rich Content 3",
  "description": "A combobox pattern: combobox-rich-content-3",
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/patterns/combobox/rich-content/combobox-rich-content-3.tsx",
      "content": "\"use client\";\n\nimport { Check, ChevronsUpDown } from \"lucide-react\";\nimport { useState } from \"react\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n} from \"@/components/ui/command\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport { cn } from \"@/lib/utils\";\n\nexport const title = \"Items with Status Indicators\";\n\nconst tasks = [\n  { value: \"task-1\", label: \"Update documentation\", status: \"completed\" },\n  { value: \"task-2\", label: \"Fix login bug\", status: \"in-progress\" },\n  { value: \"task-3\", label: \"Add dark mode\", status: \"todo\" },\n  { value: \"task-4\", label: \"Optimize performance\", status: \"in-progress\" },\n];\n\nconst statusConfig = {\n  completed: { label: \"Done\", variant: \"default\" as const },\n  \"in-progress\": { label: \"In Progress\", variant: \"secondary\" as const },\n  todo: { label: \"To Do\", variant: \"outline\" as const },\n};\n\nconst Example = () => {\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(\"\");\n\n  return (\n    <Popover onOpenChange={setOpen} open={open}>\n      <PopoverTrigger asChild>\n        <Button\n          aria-expanded={open}\n          className=\"w-[280px] justify-between\"\n          role=\"combobox\"\n          variant=\"outline\"\n        >\n          {value\n            ? tasks.find((task) => task.value === value)?.label\n            : \"Select task...\"}\n          <ChevronsUpDown className=\"ml-2 size-4 shrink-0 opacity-50\" />\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-[280px] p-0\">\n        <Command>\n          <CommandInput placeholder=\"Search tasks...\" />\n          <CommandList>\n            <CommandEmpty>No task found.</CommandEmpty>\n            <CommandGroup>\n              {tasks.map((task) => (\n                <CommandItem\n                  className=\"flex items-center justify-between gap-2\"\n                  key={task.value}\n                  onSelect={(currentValue) => {\n                    setValue(currentValue === value ? \"\" : currentValue);\n                    setOpen(false);\n                  }}\n                  value={task.value}\n                >\n                  <div className=\"flex items-center gap-2\">\n                    <Check\n                      className={cn(\n                        \"size-4\",\n                        value === task.value ? \"opacity-100\" : \"opacity-0\"\n                      )}\n                    />\n                    {task.label}\n                  </div>\n                  <Badge variant={statusConfig[task.status].variant}>\n                    {statusConfig[task.status].label}\n                  </Badge>\n                </CommandItem>\n              ))}\n            </CommandGroup>\n          </CommandList>\n        </Command>\n      </PopoverContent>\n    </Popover>\n  );\n};\n\nexport default Example;\n",
      "type": "registry:component"
    }
  ]
}