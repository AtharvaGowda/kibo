{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pattern-data-table-standard-3",
  "type": "registry:component",
  "title": "Data Table Standard 3",
  "description": "A data-table pattern: data-table-standard-3",
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/patterns/data-table/standard/data-table-standard-3.tsx",
      "content": "\"use client\";\n\nimport {\n  type ColumnDef,\n  flexRender,\n  getCoreRowModel,\n  useReactTable,\n  type VisibilityState,\n} from \"@tanstack/react-table\";\nimport { ChevronDownIcon } from \"lucide-react\";\nimport * as React from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\n\nexport const title = \"Data Table with Column Visibility\";\n\ntype Order = {\n  id: string;\n  customer: string;\n  product: string;\n  quantity: number;\n  total: number;\n  date: string;\n};\n\nconst data: Order[] = [\n  {\n    id: \"ORD-001\",\n    customer: \"John Doe\",\n    product: \"Laptop\",\n    quantity: 1,\n    total: 999,\n    date: \"2024-01-15\",\n  },\n  {\n    id: \"ORD-002\",\n    customer: \"Jane Smith\",\n    product: \"Headphones\",\n    quantity: 2,\n    total: 398,\n    date: \"2024-01-16\",\n  },\n  {\n    id: \"ORD-003\",\n    customer: \"Bob Johnson\",\n    product: \"Keyboard\",\n    quantity: 1,\n    total: 79,\n    date: \"2024-01-17\",\n  },\n  {\n    id: \"ORD-004\",\n    customer: \"Alice Williams\",\n    product: \"Mouse\",\n    quantity: 3,\n    total: 147,\n    date: \"2024-01-18\",\n  },\n];\n\nconst columns: ColumnDef<Order>[] = [\n  {\n    accessorKey: \"id\",\n    header: \"Order ID\",\n    cell: ({ row }) => <div className=\"font-medium\">{row.getValue(\"id\")}</div>,\n  },\n  {\n    accessorKey: \"customer\",\n    header: \"Customer\",\n    cell: ({ row }) => <div>{row.getValue(\"customer\")}</div>,\n  },\n  {\n    accessorKey: \"product\",\n    header: \"Product\",\n    cell: ({ row }) => <div>{row.getValue(\"product\")}</div>,\n  },\n  {\n    accessorKey: \"quantity\",\n    header: () => <div className=\"text-right\">Quantity</div>,\n    cell: ({ row }) => (\n      <div className=\"text-right\">{row.getValue(\"quantity\")}</div>\n    ),\n  },\n  {\n    accessorKey: \"total\",\n    header: () => <div className=\"text-right\">Total</div>,\n    cell: ({ row }) => {\n      const total = Number.parseFloat(row.getValue(\"total\"));\n      const formatted = new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n      }).format(total);\n      return <div className=\"text-right font-medium\">{formatted}</div>;\n    },\n  },\n  {\n    accessorKey: \"date\",\n    header: \"Date\",\n    cell: ({ row }) => <div>{row.getValue(\"date\")}</div>,\n  },\n];\n\nconst Example = () => {\n  const [columnVisibility, setColumnVisibility] =\n    React.useState<VisibilityState>({});\n\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n    onColumnVisibilityChange: setColumnVisibility,\n    state: {\n      columnVisibility,\n    },\n  });\n\n  return (\n    <div className=\"w-full max-w-4xl\">\n      <div className=\"flex items-center justify-end py-4\">\n        <DropdownMenu>\n          <DropdownMenuTrigger asChild>\n            <Button variant=\"outline\">\n              Columns <ChevronDownIcon className=\"ml-2 size-4\" />\n            </Button>\n          </DropdownMenuTrigger>\n          <DropdownMenuContent align=\"end\">\n            {table\n              .getAllColumns()\n              .filter((column) => column.getCanHide())\n              .map((column) => (\n                <DropdownMenuCheckboxItem\n                  checked={column.getIsVisible()}\n                  className=\"capitalize\"\n                  key={column.id}\n                  onCheckedChange={(value) => column.toggleVisibility(!!value)}\n                >\n                  {column.id}\n                </DropdownMenuCheckboxItem>\n              ))}\n          </DropdownMenuContent>\n        </DropdownMenu>\n      </div>\n      <div className=\"rounded-md border bg-background\">\n        <Table>\n          <TableHeader>\n            {table.getHeaderGroups().map((headerGroup) => (\n              <TableRow key={headerGroup.id}>\n                {headerGroup.headers.map((header) => (\n                  <TableHead key={header.id}>\n                    {header.isPlaceholder\n                      ? null\n                      : flexRender(\n                          header.column.columnDef.header,\n                          header.getContext()\n                        )}\n                  </TableHead>\n                ))}\n              </TableRow>\n            ))}\n          </TableHeader>\n          <TableBody>\n            {table.getRowModel().rows?.length ? (\n              table.getRowModel().rows.map((row) => (\n                <TableRow key={row.id}>\n                  {row.getVisibleCells().map((cell) => (\n                    <TableCell key={cell.id}>\n                      {flexRender(\n                        cell.column.columnDef.cell,\n                        cell.getContext()\n                      )}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            ) : (\n              <TableRow>\n                <TableCell\n                  className=\"h-24 text-center\"\n                  colSpan={columns.length}\n                >\n                  No results.\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </div>\n    </div>\n  );\n};\n\nexport default Example;\n",
      "type": "registry:component"
    }
  ]
}