{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pattern-chart-pie-interactive",
  "type": "registry:component",
  "title": "Chart Pie Interactive",
  "description": "A chart pattern: chart-pie-interactive",
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/patterns/chart/pie/chart-pie-interactive.tsx",
      "content": "\"use client\";\n\nimport { Label, Pie, PieChart, Sector } from \"recharts\";\nimport type { PieSectorDataItem } from \"recharts/types/polar/Pie\";\n\nimport {\n  type ChartConfig,\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n} from \"@/components/ui/chart\";\n\nexport const title = \"An interactive pie chart\";\n\nconst desktopData = [\n  { month: \"january\", desktop: 186, fill: \"var(--color-january)\" },\n  { month: \"february\", desktop: 305, fill: \"var(--color-february)\" },\n  { month: \"march\", desktop: 237, fill: \"var(--color-march)\" },\n  { month: \"april\", desktop: 173, fill: \"var(--color-april)\" },\n  { month: \"may\", desktop: 209, fill: \"var(--color-may)\" },\n];\n\nconst chartConfig = {\n  visitors: {\n    label: \"Visitors\",\n  },\n  desktop: {\n    label: \"Desktop\",\n  },\n  mobile: {\n    label: \"Mobile\",\n  },\n  january: {\n    label: \"January\",\n    color: \"var(--chart-1)\",\n  },\n  february: {\n    label: \"February\",\n    color: \"var(--chart-2)\",\n  },\n  march: {\n    label: \"March\",\n    color: \"var(--chart-3)\",\n  },\n  april: {\n    label: \"April\",\n    color: \"var(--chart-4)\",\n  },\n  may: {\n    label: \"May\",\n    color: \"var(--chart-5)\",\n  },\n} satisfies ChartConfig;\n\nconst ChartPieInteractive = () => {\n  const id = \"pie-interactive\";\n  const activeIndex = 0;\n\n  return (\n    <div className=\"w-full max-w-xl rounded-md border bg-background p-4\">\n      <ChartContainer\n        className=\"mx-auto aspect-square w-full max-w-[300px]\"\n        config={chartConfig}\n        id={id}\n      >\n        <PieChart>\n          <ChartTooltip\n            content={<ChartTooltipContent hideLabel />}\n            cursor={false}\n          />\n          <Pie\n            activeIndex={activeIndex}\n            activeShape={({ outerRadius = 0, ...props }: PieSectorDataItem) => (\n              <g>\n                <Sector {...props} outerRadius={outerRadius + 10} />\n                <Sector\n                  {...props}\n                  innerRadius={outerRadius + 12}\n                  outerRadius={outerRadius + 25}\n                />\n              </g>\n            )}\n            data={desktopData}\n            dataKey=\"desktop\"\n            innerRadius={60}\n            nameKey=\"month\"\n            strokeWidth={5}\n          >\n            <Label\n              content={({ viewBox }) => {\n                if (viewBox && \"cx\" in viewBox && \"cy\" in viewBox) {\n                  return (\n                    <text\n                      dominantBaseline=\"middle\"\n                      textAnchor=\"middle\"\n                      x={viewBox.cx}\n                      y={viewBox.cy}\n                    >\n                      <tspan\n                        className=\"fill-foreground font-bold text-3xl\"\n                        x={viewBox.cx}\n                        y={viewBox.cy}\n                      >\n                        {desktopData[activeIndex].desktop.toLocaleString()}\n                      </tspan>\n                      <tspan\n                        className=\"fill-muted-foreground\"\n                        x={viewBox.cx}\n                        y={(viewBox.cy || 0) + 24}\n                      >\n                        Visitors\n                      </tspan>\n                    </text>\n                  );\n                }\n              }}\n            />\n          </Pie>\n        </PieChart>\n      </ChartContainer>\n    </div>\n  );\n};\n\nexport default ChartPieInteractive;\n",
      "type": "registry:component"
    }
  ]
}