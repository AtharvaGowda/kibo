{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pattern-combobox-rich-content-1",
  "type": "registry:component",
  "title": "Combobox Rich Content 1",
  "description": "A combobox pattern: combobox-rich-content-1",
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/patterns/combobox/rich-content/combobox-rich-content-1.tsx",
      "content": "\"use client\";\n\nimport { Check, ChevronsUpDown } from \"lucide-react\";\nimport { useState } from \"react\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n} from \"@/components/ui/command\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport { cn } from \"@/lib/utils\";\n\nexport const title = \"Items with Avatars\";\n\nconst users = [\n  {\n    value: \"haydenbleasel\",\n    label: \"Hayden Bleasel\",\n    avatar: \"https://github.com/haydenbleasel.png\",\n  },\n  {\n    value: \"shadcn\",\n    label: \"shadcn\",\n    avatar: \"https://github.com/shadcn.png\",\n  },\n  {\n    value: \"leerob\",\n    label: \"Lee Robinson\",\n    avatar: \"https://github.com/leerob.png\",\n  },\n  {\n    value: \"rauchg\",\n    label: \"Guillermo Rauch\",\n    avatar: \"https://github.com/rauchg.png\",\n  },\n];\n\nconst Example = () => {\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(\"\");\n\n  return (\n    <Popover onOpenChange={setOpen} open={open}>\n      <PopoverTrigger asChild>\n        <Button\n          aria-expanded={open}\n          className=\"w-[250px] justify-between\"\n          role=\"combobox\"\n          variant=\"outline\"\n        >\n          {value ? (\n            <div className=\"flex items-center gap-2\">\n              <Avatar className=\"size-5\">\n                <AvatarImage\n                  src={users.find((user) => user.value === value)?.avatar}\n                />\n                <AvatarFallback>\n                  {users.find((user) => user.value === value)?.label.charAt(0)}\n                </AvatarFallback>\n              </Avatar>\n              {users.find((user) => user.value === value)?.label}\n            </div>\n          ) : (\n            \"Select user...\"\n          )}\n          <ChevronsUpDown className=\"ml-2 size-4 shrink-0 opacity-50\" />\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-[250px] p-0\">\n        <Command>\n          <CommandInput placeholder=\"Search users...\" />\n          <CommandList>\n            <CommandEmpty>No user found.</CommandEmpty>\n            <CommandGroup>\n              {users.map((user) => (\n                <CommandItem\n                  key={user.value}\n                  onSelect={(currentValue) => {\n                    setValue(currentValue === value ? \"\" : currentValue);\n                    setOpen(false);\n                  }}\n                  value={user.value}\n                >\n                  <Check\n                    className={cn(\n                      \"mr-2 size-4\",\n                      value === user.value ? \"opacity-100\" : \"opacity-0\"\n                    )}\n                  />\n                  <Avatar className=\"mr-2 size-5\">\n                    <AvatarImage src={user.avatar} />\n                    <AvatarFallback>{user.label.charAt(0)}</AvatarFallback>\n                  </Avatar>\n                  {user.label}\n                </CommandItem>\n              ))}\n            </CommandGroup>\n          </CommandList>\n        </Command>\n      </PopoverContent>\n    </Popover>\n  );\n};\n\nexport default Example;\n",
      "type": "registry:component"
    }
  ]
}