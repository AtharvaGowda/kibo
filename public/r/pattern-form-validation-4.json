{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pattern-form-validation-4",
  "type": "registry:component",
  "title": "Form Validation 4",
  "description": "A form pattern: form-validation-4",
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/patterns/form/validation/form-validation-4.tsx",
      "content": "\"use client\";\n\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\n\nexport const title = \"Password Strength Validation\";\n\nconst formSchema = z\n  .object({\n    password: z\n      .string()\n      .min(8, \"Password must be at least 8 characters\")\n      .regex(/[A-Z]/, \"Password must contain at least one uppercase letter\")\n      .regex(/[a-z]/, \"Password must contain at least one lowercase letter\")\n      .regex(/[0-9]/, \"Password must contain at least one number\")\n      .regex(\n        /[^A-Za-z0-9]/,\n        \"Password must contain at least one special character\"\n      ),\n    confirmPassword: z.string(),\n  })\n  .refine((data) => data.password === data.confirmPassword, {\n    message: \"Passwords don't match\",\n    path: [\"confirmPassword\"],\n  });\n\nconst Example = () => {\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      password: \"\",\n      confirmPassword: \"\",\n    },\n  });\n\n  function onSubmit(values: z.infer<typeof formSchema>) {\n    console.log(values);\n  }\n\n  return (\n    <div className=\"w-full max-w-md\">\n      <Form {...form}>\n        <form className=\"space-y-4\" onSubmit={form.handleSubmit(onSubmit)}>\n          <FormField\n            control={form.control}\n            name=\"password\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Password</FormLabel>\n                <FormControl>\n                  <Input\n                    className=\"bg-background\"\n                    placeholder=\"Enter password\"\n                    type=\"password\"\n                    {...field}\n                  />\n                </FormControl>\n                <FormDescription>\n                  Must contain uppercase, lowercase, number, and special\n                  character.\n                </FormDescription>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"confirmPassword\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Confirm Password</FormLabel>\n                <FormControl>\n                  <Input\n                    className=\"bg-background\"\n                    placeholder=\"Confirm password\"\n                    type=\"password\"\n                    {...field}\n                  />\n                </FormControl>\n                <FormDescription>\n                  Re-enter your password to confirm.\n                </FormDescription>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <Button type=\"submit\">Create Account</Button>\n        </form>\n      </Form>\n    </div>\n  );\n};\n\nexport default Example;\n",
      "type": "registry:component"
    }
  ]
}