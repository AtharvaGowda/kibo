{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pattern-navigation-menu-complex-5",
  "type": "registry:component",
  "title": "Navigation Menu Complex 5",
  "description": "A navigation-menu pattern: navigation-menu-complex-5",
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/patterns/navigation-menu/complex/navigation-menu-complex-5.tsx",
      "content": "\"use client\";\n\nimport type { LucideIcon } from \"lucide-react\";\nimport { ArrowRight, Code, Layers, Palette, Play, Zap } from \"lucide-react\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  NavigationMenu,\n  NavigationMenuContent,\n  NavigationMenuItem,\n  NavigationMenuLink,\n  NavigationMenuList,\n  NavigationMenuTrigger,\n} from \"@/components/ui/navigation-menu\";\n\nexport const title = \"Mixed Content Types\";\n\nconst solutions: Array<{\n  icon: LucideIcon;\n  title: string;\n  description: string;\n  badge?: { label: string; variant: \"default\" | \"secondary\" };\n}> = [\n  {\n    icon: Code,\n    title: \"Developer Platform\",\n    description: \"Everything you need to build modern apps\",\n    badge: { label: \"Popular\", variant: \"secondary\" },\n  },\n  {\n    icon: Palette,\n    title: \"Design System\",\n    description: \"Beautiful, accessible components\",\n  },\n  {\n    icon: Layers,\n    title: \"Component Library\",\n    description: \"Pre-built UI components and templates\",\n    badge: { label: \"New\", variant: \"default\" },\n  },\n  {\n    icon: Zap,\n    title: \"API Infrastructure\",\n    description: \"Scalable backend services\",\n  },\n];\n\nconst sidebarContent = {\n  webinar: {\n    badge: { label: \"Webinar\", variant: \"default\" as const },\n    title: \"Building at Scale\",\n    description: \"Learn how teams scale their applications\",\n    buttonText: \"Watch Now\",\n    buttonIcon: Play,\n  },\n  getStarted: {\n    title: \"Start Building\",\n    description: \"Get started with our platform in minutes\",\n    buttons: [\n      {\n        label: \"Create Account\",\n        variant: \"default\" as const,\n        icon: ArrowRight,\n      },\n      { label: \"View Docs\", variant: \"outline\" as const },\n    ],\n  },\n};\n\nconst Example = () => (\n  <div className=\"pr-[50vw] pb-[50vh]\">\n    <div className=\"w-full max-w-md rounded-md border bg-background p-px\">\n      <NavigationMenu>\n        <NavigationMenuList>\n          <NavigationMenuItem>\n            <NavigationMenuTrigger>Solutions</NavigationMenuTrigger>\n            <NavigationMenuContent>\n              <div className=\"w-[800px] p-6\">\n                <div className=\"grid grid-cols-[1fr_300px] gap-6\">\n                  <div className=\"grid grid-cols-2 gap-x-6 gap-y-4\">\n                    {solutions.map((solution) => {\n                      const Icon = solution.icon;\n                      return (\n                        <NavigationMenuLink\n                          className=\"flex flex-col justify-between gap-4\"\n                          href=\"#\"\n                          key={solution.title}\n                        >\n                          <div className=\"flex items-center justify-between gap-2\">\n                            <Icon className=\"size-5\" />\n                            {solution.badge && (\n                              <Badge variant={solution.badge.variant}>\n                                {solution.badge.label}\n                              </Badge>\n                            )}\n                          </div>\n                          <div>\n                            <div className=\"flex items-center gap-2\">\n                              <span className=\"font-medium\">\n                                {solution.title}\n                              </span>\n                            </div>\n                            <span className=\"text-muted-foreground\">\n                              {solution.description}\n                            </span>\n                          </div>\n                        </NavigationMenuLink>\n                      );\n                    })}\n                  </div>\n                  <div className=\"space-y-4\">\n                    <div className=\"overflow-hidden rounded-lg bg-muted\">\n                      <div className=\"aspect-video bg-gradient-to-br from-primary/20 to-primary/5\" />\n                      <div className=\"p-4\">\n                        <Badge\n                          className=\"mb-2\"\n                          variant={sidebarContent.webinar.badge.variant}\n                        >\n                          {sidebarContent.webinar.badge.label}\n                        </Badge>\n                        <h4 className=\"mb-1 font-semibold\">\n                          {sidebarContent.webinar.title}\n                        </h4>\n                        <p className=\"mb-3 text-muted-foreground text-sm\">\n                          {sidebarContent.webinar.description}\n                        </p>\n                        <Button className=\"w-full\" size=\"sm\">\n                          <sidebarContent.webinar.buttonIcon />\n                          {sidebarContent.webinar.buttonText}\n                        </Button>\n                      </div>\n                    </div>\n                    <div className=\"rounded-lg border bg-card p-4\">\n                      <h4 className=\"mb-1 font-semibold\">\n                        {sidebarContent.getStarted.title}\n                      </h4>\n                      <p className=\"mb-3 text-muted-foreground text-sm\">\n                        {sidebarContent.getStarted.description}\n                      </p>\n                      <div className=\"space-y-2\">\n                        {sidebarContent.getStarted.buttons.map((button) => {\n                          const Icon = button.icon;\n                          return (\n                            <Button\n                              className=\"w-full\"\n                              key={button.label}\n                              size=\"sm\"\n                              variant={button.variant}\n                            >\n                              {button.label}\n                              {Icon && <Icon />}\n                            </Button>\n                          );\n                        })}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </NavigationMenuContent>\n          </NavigationMenuItem>\n        </NavigationMenuList>\n      </NavigationMenu>\n    </div>\n  </div>\n);\n\nexport default Example;\n",
      "type": "registry:component"
    }
  ]
}