{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pattern-combobox-custom-actions-1",
  "type": "registry:component",
  "title": "Combobox Custom Actions 1",
  "description": "A combobox pattern: combobox-custom-actions-1",
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/patterns/combobox/custom-actions/combobox-custom-actions-1.tsx",
      "content": "\"use client\";\n\nimport { Check, ChevronsUpDown, Plus } from \"lucide-react\";\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n  CommandSeparator,\n} from \"@/components/ui/command\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport { cn } from \"@/lib/utils\";\n\nexport const title = \"Create New Option Inline\";\n\nconst Example = () => {\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(\"\");\n  const [items, setItems] = useState([\"Tag 1\", \"Tag 2\", \"Tag 3\"]);\n  const [search, setSearch] = useState(\"\");\n\n  const handleCreate = () => {\n    if (search && !items.includes(search)) {\n      setItems([...items, search]);\n      setValue(search);\n      setOpen(false);\n      setSearch(\"\");\n    }\n  };\n\n  return (\n    <Popover onOpenChange={setOpen} open={open}>\n      <PopoverTrigger asChild>\n        <Button\n          aria-expanded={open}\n          className=\"w-[250px] justify-between\"\n          role=\"combobox\"\n          variant=\"outline\"\n        >\n          {value || \"Select or create tag...\"}\n          <ChevronsUpDown className=\"ml-2 size-4 shrink-0 opacity-50\" />\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-[250px] p-0\">\n        <Command>\n          <CommandInput\n            onValueChange={setSearch}\n            placeholder=\"Search or create...\"\n            value={search}\n          />\n          <CommandList>\n            <CommandEmpty>\n              <Button\n                className=\"w-full justify-start\"\n                onClick={handleCreate}\n                variant=\"ghost\"\n              >\n                <Plus className=\"mr-2 size-4\" />\n                Create \"{search}\"\n              </Button>\n            </CommandEmpty>\n            <CommandGroup>\n              {items.map((item) => (\n                <CommandItem\n                  key={item}\n                  onSelect={(currentValue) => {\n                    setValue(currentValue === value ? \"\" : currentValue);\n                    setOpen(false);\n                  }}\n                  value={item}\n                >\n                  <Check\n                    className={cn(\n                      \"mr-2 size-4\",\n                      value === item ? \"opacity-100\" : \"opacity-0\"\n                    )}\n                  />\n                  {item}\n                </CommandItem>\n              ))}\n            </CommandGroup>\n            {search && !items.includes(search) && items.length > 0 && (\n              <>\n                <CommandSeparator />\n                <CommandGroup>\n                  <CommandItem onSelect={handleCreate}>\n                    <Plus className=\"mr-2 size-4\" />\n                    Create \"{search}\"\n                  </CommandItem>\n                </CommandGroup>\n              </>\n            )}\n          </CommandList>\n        </Command>\n      </PopoverContent>\n    </Popover>\n  );\n};\n\nexport default Example;\n",
      "type": "registry:component"
    }
  ]
}