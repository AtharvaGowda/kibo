{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pattern-combobox-grouped-3",
  "type": "registry:component",
  "title": "Combobox Grouped 3",
  "description": "A combobox pattern: combobox-grouped-3",
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/patterns/combobox/grouped/combobox-grouped-3.tsx",
      "content": "\"use client\";\n\nimport { Check, ChevronRight, ChevronsUpDown } from \"lucide-react\";\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n} from \"@/components/ui/command\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport { cn } from \"@/lib/utils\";\n\nexport const title = \"Nested/Hierarchical Groups\";\n\nconst regions = {\n  \"North America\": [\n    { value: \"us\", label: \"United States\" },\n    { value: \"ca\", label: \"Canada\" },\n    { value: \"mx\", label: \"Mexico\" },\n  ],\n  Europe: [\n    { value: \"uk\", label: \"United Kingdom\" },\n    { value: \"de\", label: \"Germany\" },\n    { value: \"fr\", label: \"France\" },\n  ],\n  Asia: [\n    { value: \"jp\", label: \"Japan\" },\n    { value: \"cn\", label: \"China\" },\n    { value: \"in\", label: \"India\" },\n  ],\n};\n\nconst Example = () => {\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(\"\");\n\n  return (\n    <Popover onOpenChange={setOpen} open={open}>\n      <PopoverTrigger asChild>\n        <Button\n          aria-expanded={open}\n          className=\"w-[250px] justify-between\"\n          role=\"combobox\"\n          variant=\"outline\"\n        >\n          {value\n            ? Object.values(regions)\n                .flat()\n                .find((item) => item.value === value)?.label\n            : \"Select country...\"}\n          <ChevronsUpDown className=\"ml-2 size-4 shrink-0 opacity-50\" />\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-[250px] p-0\">\n        <Command>\n          <CommandInput placeholder=\"Search country...\" />\n          <CommandList>\n            <CommandEmpty>No country found.</CommandEmpty>\n            {Object.entries(regions).map(([region, countries]) => (\n              <CommandGroup heading={region} key={region}>\n                {countries.map((country) => (\n                  <CommandItem\n                    key={country.value}\n                    onSelect={(currentValue) => {\n                      setValue(currentValue === value ? \"\" : currentValue);\n                      setOpen(false);\n                    }}\n                    value={country.value}\n                  >\n                    <Check\n                      className={cn(\n                        \"mr-2 size-4\",\n                        value === country.value ? \"opacity-100\" : \"opacity-0\"\n                      )}\n                    />\n                    <ChevronRight className=\"mr-2 size-3 opacity-50\" />\n                    {country.label}\n                  </CommandItem>\n                ))}\n              </CommandGroup>\n            ))}\n          </CommandList>\n        </Command>\n      </PopoverContent>\n    </Popover>\n  );\n};\n\nexport default Example;\n",
      "type": "registry:component"
    }
  ]
}