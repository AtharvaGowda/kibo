{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pattern-combobox-grouped-6",
  "type": "registry:component",
  "title": "Combobox Grouped 6",
  "description": "A combobox pattern: combobox-grouped-6",
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/patterns/combobox/grouped/combobox-grouped-6.tsx",
      "content": "\"use client\";\n\nimport { Check, ChevronsUpDown, Clock } from \"lucide-react\";\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n  CommandSeparator,\n} from \"@/components/ui/command\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport { cn } from \"@/lib/utils\";\n\nexport const title = \"Recent vs All Items\";\n\nconst recentProjects = [\n  { value: \"project-a\", label: \"Project Alpha\" },\n  { value: \"project-b\", label: \"Project Beta\" },\n];\n\nconst allProjects = [\n  { value: \"project-a\", label: \"Project Alpha\" },\n  { value: \"project-b\", label: \"Project Beta\" },\n  { value: \"project-c\", label: \"Project Charlie\" },\n  { value: \"project-d\", label: \"Project Delta\" },\n  { value: \"project-e\", label: \"Project Echo\" },\n];\n\nconst Example = () => {\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(\"\");\n\n  return (\n    <Popover onOpenChange={setOpen} open={open}>\n      <PopoverTrigger asChild>\n        <Button\n          aria-expanded={open}\n          className=\"w-[250px] justify-between\"\n          role=\"combobox\"\n          variant=\"outline\"\n        >\n          {value\n            ? allProjects.find((item) => item.value === value)?.label\n            : \"Select project...\"}\n          <ChevronsUpDown className=\"ml-2 size-4 shrink-0 opacity-50\" />\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-[250px] p-0\">\n        <Command>\n          <CommandInput placeholder=\"Search projects...\" />\n          <CommandList>\n            <CommandEmpty>No project found.</CommandEmpty>\n            <CommandGroup heading=\"Recent\">\n              {recentProjects.map((item) => (\n                <CommandItem\n                  key={item.value}\n                  onSelect={(currentValue) => {\n                    setValue(currentValue === value ? \"\" : currentValue);\n                    setOpen(false);\n                  }}\n                  value={item.value}\n                >\n                  <Check\n                    className={cn(\n                      \"mr-2 size-4\",\n                      value === item.value ? \"opacity-100\" : \"opacity-0\"\n                    )}\n                  />\n                  <Clock className=\"mr-2 size-3 opacity-50\" />\n                  {item.label}\n                </CommandItem>\n              ))}\n            </CommandGroup>\n            <CommandSeparator />\n            <CommandGroup heading=\"All Projects\">\n              {allProjects\n                .filter(\n                  (item) =>\n                    !recentProjects.find(\n                      (recent) => recent.value === item.value\n                    )\n                )\n                .map((item) => (\n                  <CommandItem\n                    key={item.value}\n                    onSelect={(currentValue) => {\n                      setValue(currentValue === value ? \"\" : currentValue);\n                      setOpen(false);\n                    }}\n                    value={item.value}\n                  >\n                    <Check\n                      className={cn(\n                        \"mr-2 size-4\",\n                        value === item.value ? \"opacity-100\" : \"opacity-0\"\n                      )}\n                    />\n                    {item.label}\n                  </CommandItem>\n                ))}\n            </CommandGroup>\n          </CommandList>\n        </Command>\n      </PopoverContent>\n    </Popover>\n  );\n};\n\nexport default Example;\n",
      "type": "registry:component"
    }
  ]
}