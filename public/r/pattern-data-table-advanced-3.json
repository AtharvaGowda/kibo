{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pattern-data-table-advanced-3",
  "type": "registry:component",
  "title": "Data Table Advanced 3",
  "description": "A data-table pattern: data-table-advanced-3",
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/patterns/data-table/advanced/data-table-advanced-3.tsx",
      "content": "\"use client\";\n\nimport {\n  type ColumnDef,\n  type ColumnResizeMode,\n  flexRender,\n  getCoreRowModel,\n  useReactTable,\n} from \"@tanstack/react-table\";\nimport * as React from \"react\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\n\nexport const title = \"Resizable Columns\";\n\ntype Employee = {\n  id: string;\n  name: string;\n  department: string;\n  position: string;\n  email: string;\n  salary: number;\n};\n\nconst data: Employee[] = [\n  {\n    id: \"1\",\n    name: \"John Doe\",\n    department: \"Engineering\",\n    position: \"Senior Developer\",\n    email: \"john.doe@example.com\",\n    salary: 120_000,\n  },\n  {\n    id: \"2\",\n    name: \"Jane Smith\",\n    department: \"Design\",\n    position: \"Product Designer\",\n    email: \"jane.smith@example.com\",\n    salary: 95_000,\n  },\n  {\n    id: \"3\",\n    name: \"Bob Johnson\",\n    department: \"Marketing\",\n    position: \"Marketing Manager\",\n    email: \"bob.johnson@example.com\",\n    salary: 85_000,\n  },\n  {\n    id: \"4\",\n    name: \"Alice Williams\",\n    department: \"Engineering\",\n    position: \"Tech Lead\",\n    email: \"alice.williams@example.com\",\n    salary: 145_000,\n  },\n];\n\nconst columns: ColumnDef<Employee>[] = [\n  {\n    accessorKey: \"name\",\n    header: \"Name\",\n    cell: ({ row }) => (\n      <div className=\"font-medium\">{row.getValue(\"name\")}</div>\n    ),\n    size: 150,\n  },\n  {\n    accessorKey: \"department\",\n    header: \"Department\",\n    cell: ({ row }) => <div>{row.getValue(\"department\")}</div>,\n    size: 120,\n  },\n  {\n    accessorKey: \"position\",\n    header: \"Position\",\n    cell: ({ row }) => <div>{row.getValue(\"position\")}</div>,\n    size: 180,\n  },\n  {\n    accessorKey: \"email\",\n    header: \"Email\",\n    cell: ({ row }) => <div>{row.getValue(\"email\")}</div>,\n    size: 220,\n  },\n  {\n    accessorKey: \"salary\",\n    header: () => <div className=\"text-right\">Salary</div>,\n    cell: ({ row }) => {\n      const salary = Number.parseFloat(row.getValue(\"salary\"));\n      const formatted = new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n        maximumFractionDigits: 0,\n      }).format(salary);\n      return <div className=\"text-right font-medium\">{formatted}</div>;\n    },\n    size: 120,\n  },\n];\n\nconst Example = () => {\n  const [columnResizeMode] = React.useState<ColumnResizeMode>(\"onChange\");\n\n  const table = useReactTable({\n    data,\n    columns,\n    columnResizeMode,\n    getCoreRowModel: getCoreRowModel(),\n  });\n\n  return (\n    <div className=\"w-full max-w-4xl\">\n      <div className=\"overflow-hidden rounded-md border bg-background\">\n        <div className=\"overflow-x-auto\">\n          <Table style={{ width: table.getTotalSize() }}>\n            <TableHeader>\n              {table.getHeaderGroups().map((headerGroup) => (\n                <TableRow key={headerGroup.id}>\n                  {headerGroup.headers.map((header) => (\n                    <TableHead\n                      className=\"relative\"\n                      key={header.id}\n                      style={{ width: header.getSize() }}\n                    >\n                      {header.isPlaceholder\n                        ? null\n                        : flexRender(\n                            header.column.columnDef.header,\n                            header.getContext()\n                          )}\n                      <div\n                        className={`absolute top-0 right-0 h-full w-1 cursor-col-resize touch-none select-none bg-border opacity-0 hover:opacity-100 ${\n                          header.column.getIsResizing()\n                            ? \"bg-primary opacity-100\"\n                            : \"\"\n                        }`}\n                        onMouseDown={header.getResizeHandler()}\n                        onTouchStart={header.getResizeHandler()}\n                      />\n                    </TableHead>\n                  ))}\n                </TableRow>\n              ))}\n            </TableHeader>\n            <TableBody>\n              {table.getRowModel().rows?.length ? (\n                table.getRowModel().rows.map((row) => (\n                  <TableRow key={row.id}>\n                    {row.getVisibleCells().map((cell) => (\n                      <TableCell\n                        key={cell.id}\n                        style={{ width: cell.column.getSize() }}\n                      >\n                        {flexRender(\n                          cell.column.columnDef.cell,\n                          cell.getContext()\n                        )}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell\n                    className=\"h-24 text-center\"\n                    colSpan={columns.length}\n                  >\n                    No results.\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n      </div>\n      <p className=\"mt-4 text-muted-foreground text-sm\">\n        Drag column edges to resize\n      </p>\n    </div>\n  );\n};\n\nexport default Example;\n",
      "type": "registry:component"
    }
  ]
}