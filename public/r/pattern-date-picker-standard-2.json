{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pattern-date-picker-standard-2",
  "type": "registry:component",
  "title": "Date Picker Standard 2",
  "description": "A date-picker pattern: date-picker-standard-2",
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/patterns/date-picker/standard/date-picker-standard-2.tsx",
      "content": "\"use client\";\n\nimport { format } from \"date-fns\";\nimport { CalendarIcon } from \"lucide-react\";\nimport type { ChangeEvent, ChangeEventHandler } from \"react\";\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport { cn } from \"@/lib/utils\";\n\nexport const title = \"Date Picker with Month and Year Selector\";\n\nconst Example = () => {\n  const [date, setDate] = useState<Date | undefined>(new Date());\n  const [month, setMonth] = useState<Date>(new Date());\n\n  const handleCalendarChange = (\n    value: string | number,\n    event: ChangeEventHandler<HTMLSelectElement>\n  ) => {\n    const newEvent = {\n      target: {\n        value: String(value),\n      },\n    } as ChangeEvent<HTMLSelectElement>;\n    event(newEvent);\n  };\n\n  return (\n    <Popover>\n      <PopoverTrigger asChild>\n        <Button\n          className={cn(\n            \"w-[280px] justify-start text-left font-normal\",\n            !date && \"text-muted-foreground\"\n          )}\n          variant=\"outline\"\n        >\n          <CalendarIcon className=\"mr-2 h-4 w-4\" />\n          {date ? format(date, \"PPP\") : <span>Pick a date</span>}\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent align=\"start\" className=\"w-auto p-0\">\n        <Calendar\n          captionLayout=\"dropdown\"\n          components={{\n            MonthCaption: (props) => props.children,\n            DropdownNav: (props) => (\n              <div className=\"flex w-full items-center gap-2\">\n                {props.children}\n              </div>\n            ),\n            Dropdown: (props) => (\n              <Select\n                onValueChange={(value) => {\n                  if (props.onChange) {\n                    handleCalendarChange(value, props.onChange);\n                  }\n                }}\n                value={String(props.value)}\n              >\n                <SelectTrigger className=\"first:flex-1 last:shrink-0\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  {props.options?.map((option) => (\n                    <SelectItem\n                      disabled={option.disabled}\n                      key={option.value}\n                      value={String(option.value)}\n                    >\n                      {option.label}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            ),\n          }}\n          hideNavigation\n          mode=\"single\"\n          month={month}\n          onMonthChange={setMonth}\n          onSelect={setDate}\n          selected={date}\n        />\n      </PopoverContent>\n    </Popover>\n  );\n};\n\nexport default Example;\n",
      "type": "registry:component"
    }
  ]
}