{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pattern-form-patterns-7",
  "type": "registry:component",
  "title": "Form Patterns 7",
  "description": "A form pattern: form-patterns-7",
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/patterns/form/patterns/form-patterns-7.tsx",
      "content": "\"use client\";\n\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\n\nexport const title = \"Search Filter Form\";\n\nconst categories = [\n  { id: \"electronics\", label: \"Electronics\" },\n  { id: \"clothing\", label: \"Clothing\" },\n  { id: \"books\", label: \"Books\" },\n  { id: \"home\", label: \"Home & Garden\" },\n] as const;\n\nconst formSchema = z.object({\n  query: z.string(),\n  sortBy: z.string(),\n  priceMin: z.coerce.number().min(0).optional(),\n  priceMax: z.coerce.number().min(0).optional(),\n  categories: z.array(z.string()).default([]),\n  inStock: z.boolean().default(false),\n});\n\nconst Example = () => {\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      query: \"\",\n      sortBy: \"relevance\",\n      priceMin: undefined,\n      priceMax: undefined,\n      categories: [],\n      inStock: false,\n    },\n  });\n\n  function onSubmit(values: z.infer<typeof formSchema>) {\n    console.log(values);\n  }\n\n  return (\n    <div className=\"w-full max-w-md\">\n      <Form {...form}>\n        <form className=\"space-y-6\" onSubmit={form.handleSubmit(onSubmit)}>\n          <div>\n            <h2 className=\"font-bold text-2xl\">Search Products</h2>\n            <p className=\"text-muted-foreground text-sm\">\n              Filter and find what you're looking for\n            </p>\n          </div>\n          <FormField\n            control={form.control}\n            name=\"query\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Search</FormLabel>\n                <FormControl>\n                  <Input\n                    className=\"bg-background\"\n                    placeholder=\"Search products...\"\n                    type=\"search\"\n                    {...field}\n                  />\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"sortBy\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Sort By</FormLabel>\n                <Select\n                  defaultValue={field.value}\n                  onValueChange={field.onChange}\n                >\n                  <FormControl>\n                    <SelectTrigger className=\"bg-background\">\n                      <SelectValue />\n                    </SelectTrigger>\n                  </FormControl>\n                  <SelectContent>\n                    <SelectItem value=\"relevance\">Relevance</SelectItem>\n                    <SelectItem value=\"price-low\">\n                      Price: Low to High\n                    </SelectItem>\n                    <SelectItem value=\"price-high\">\n                      Price: High to Low\n                    </SelectItem>\n                    <SelectItem value=\"newest\">Newest First</SelectItem>\n                  </SelectContent>\n                </Select>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <div className=\"space-y-4\">\n            <h3 className=\"font-medium text-sm\">Price Range</h3>\n            <div className=\"grid grid-cols-2 gap-4\">\n              <FormField\n                control={form.control}\n                name=\"priceMin\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Min</FormLabel>\n                    <FormControl>\n                      <Input\n                        className=\"bg-background\"\n                        placeholder=\"$0\"\n                        type=\"number\"\n                        {...field}\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={form.control}\n                name=\"priceMax\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Max</FormLabel>\n                    <FormControl>\n                      <Input\n                        className=\"bg-background\"\n                        placeholder=\"$1000\"\n                        type=\"number\"\n                        {...field}\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n          </div>\n          <FormField\n            control={form.control}\n            name=\"categories\"\n            render={() => (\n              <FormItem>\n                <div className=\"mb-4\">\n                  <FormLabel className=\"text-base\">Categories</FormLabel>\n                  <FormDescription>\n                    Select the categories you want to search in.\n                  </FormDescription>\n                </div>\n                {categories.map((category) => (\n                  <FormField\n                    control={form.control}\n                    key={category.id}\n                    name=\"categories\"\n                    render={({ field }) => {\n                      return (\n                        <FormItem\n                          className=\"flex flex-row items-start space-x-3 space-y-0\"\n                          key={category.id}\n                        >\n                          <FormControl>\n                            <Checkbox\n                              checked={field.value?.includes(category.id)}\n                              onCheckedChange={(checked) => {\n                                return checked\n                                  ? field.onChange([\n                                      ...field.value,\n                                      category.id,\n                                    ])\n                                  : field.onChange(\n                                      field.value?.filter(\n                                        (value) => value !== category.id\n                                      )\n                                    );\n                              }}\n                            />\n                          </FormControl>\n                          <FormLabel className=\"font-normal\">\n                            {category.label}\n                          </FormLabel>\n                        </FormItem>\n                      );\n                    }}\n                  />\n                ))}\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"inStock\"\n            render={({ field }) => (\n              <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\n                <FormControl>\n                  <Checkbox\n                    checked={field.value}\n                    onCheckedChange={field.onChange}\n                  />\n                </FormControl>\n                <div className=\"space-y-1 leading-none\">\n                  <FormLabel>In Stock Only</FormLabel>\n                  <FormDescription>\n                    Show only products that are currently available.\n                  </FormDescription>\n                </div>\n              </FormItem>\n            )}\n          />\n          <div className=\"flex gap-2\">\n            <Button className=\"flex-1\" type=\"submit\">\n              Apply Filters\n            </Button>\n            <Button\n              onClick={() => form.reset()}\n              type=\"button\"\n              variant=\"outline\"\n            >\n              Reset\n            </Button>\n          </div>\n        </form>\n      </Form>\n    </div>\n  );\n};\n\nexport default Example;\n",
      "type": "registry:component"
    }
  ]
}