{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pattern-combobox-multi-select-7",
  "type": "registry:component",
  "title": "Combobox Multi Select 7",
  "description": "A combobox pattern: combobox-multi-select-7",
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/patterns/combobox/multi-select/combobox-multi-select-7.tsx",
      "content": "\"use client\";\n\nimport { Check, ChevronsUpDown } from \"lucide-react\";\nimport { useState } from \"react\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n} from \"@/components/ui/command\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport { cn } from \"@/lib/utils\";\n\nexport const title = \"Selected Items List Below\";\n\nconst topics = [\n  { value: \"frontend\", label: \"Frontend\" },\n  { value: \"backend\", label: \"Backend\" },\n  { value: \"devops\", label: \"DevOps\" },\n  { value: \"design\", label: \"Design\" },\n  { value: \"mobile\", label: \"Mobile\" },\n];\n\nconst Example = () => {\n  const [open, setOpen] = useState(false);\n  const [selectedValues, setSelectedValues] = useState<string[]>([\n    \"frontend\",\n    \"backend\",\n  ]);\n\n  return (\n    <div className=\"space-y-2\">\n      <Popover onOpenChange={setOpen} open={open}>\n        <PopoverTrigger asChild>\n          <Button\n            aria-expanded={open}\n            className=\"w-[250px] justify-between\"\n            role=\"combobox\"\n            variant=\"outline\"\n          >\n            {selectedValues.length > 0\n              ? `${selectedValues.length} topic(s) selected`\n              : \"Select topics...\"}\n            <ChevronsUpDown className=\"ml-2 size-4 shrink-0 opacity-50\" />\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent className=\"w-[250px] p-0\">\n          <Command>\n            <CommandInput placeholder=\"Search topics...\" />\n            <CommandList>\n              <CommandEmpty>No topic found.</CommandEmpty>\n              <CommandGroup>\n                {topics.map((topic) => (\n                  <CommandItem\n                    key={topic.value}\n                    onSelect={(currentValue) => {\n                      setSelectedValues(\n                        selectedValues.includes(currentValue)\n                          ? selectedValues.filter((v) => v !== currentValue)\n                          : [...selectedValues, currentValue]\n                      );\n                    }}\n                    value={topic.value}\n                  >\n                    <Check\n                      className={cn(\n                        \"mr-2 size-4\",\n                        selectedValues.includes(topic.value)\n                          ? \"opacity-100\"\n                          : \"opacity-0\"\n                      )}\n                    />\n                    {topic.label}\n                  </CommandItem>\n                ))}\n              </CommandGroup>\n            </CommandList>\n          </Command>\n        </PopoverContent>\n      </Popover>\n      {selectedValues.length > 0 && (\n        <div className=\"flex flex-wrap gap-1\">\n          {selectedValues.map((value) => (\n            <Badge key={value} variant=\"secondary\">\n              {topics.find((topic) => topic.value === value)?.label}\n            </Badge>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Example;\n",
      "type": "registry:component"
    }
  ]
}