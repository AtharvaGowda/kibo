{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pattern-input-otp-use-cases-4",
  "type": "registry:component",
  "title": "Input Otp Use Cases 4",
  "description": "A input-otp pattern: input-otp-use-cases-4",
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/patterns/input-otp/use-cases/input-otp-use-cases-4.tsx",
      "content": "\"use client\";\n\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { AlertTriangle } from \"lucide-react\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { toast } from \"sonner\";\nimport { z } from \"zod\";\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport {\n  InputOTP,\n  InputOTPGroup,\n  InputOTPSeparator,\n  InputOTPSlot,\n} from \"@/components/ui/input-otp\";\n\nexport const title = \"Transaction Confirmation\";\n\nconst formSchema = z.object({\n  code: z.string().min(6, {\n    message: \"Confirmation code must be 6 characters.\",\n  }),\n});\n\nconst Example = () => {\n  const [isConfirming, setIsConfirming] = useState(false);\n\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      code: \"\",\n    },\n  });\n\n  function onSubmit(values: z.infer<typeof formSchema>) {\n    setIsConfirming(true);\n    // Simulate transaction confirmation\n    setTimeout(() => {\n      setIsConfirming(false);\n      toast.success(\"Transaction confirmed successfully!\");\n    }, 1500);\n  }\n\n  return (\n    <div className=\"w-full max-w-sm space-y-6\">\n      <div className=\"space-y-2 text-center\">\n        <h2 className=\"font-semibold text-2xl\">Confirm Transaction</h2>\n        <p className=\"text-muted-foreground text-sm\">\n          You're about to send $1,250.00 to John Doe\n        </p>\n      </div>\n      <Alert>\n        <AlertTriangle className=\"h-4 w-4\" />\n        <AlertTitle>Security Check</AlertTitle>\n        <AlertDescription>\n          For your security, please enter the confirmation code sent to your\n          registered email address.\n        </AlertDescription>\n      </Alert>\n      <Form {...form}>\n        <form className=\"space-y-6\" onSubmit={form.handleSubmit(onSubmit)}>\n          <FormField\n            control={form.control}\n            name=\"code\"\n            render={({ field }) => (\n              <FormItem>\n                <FormControl>\n                  <div className=\"flex justify-center\">\n                    <InputOTP maxLength={6} {...field}>\n                      <InputOTPGroup>\n                        <InputOTPSlot className=\"bg-background\" index={0} />\n                        <InputOTPSlot className=\"bg-background\" index={1} />\n                        <InputOTPSlot className=\"bg-background\" index={2} />\n                      </InputOTPGroup>\n                      <InputOTPSeparator />\n                      <InputOTPGroup>\n                        <InputOTPSlot className=\"bg-background\" index={3} />\n                        <InputOTPSlot className=\"bg-background\" index={4} />\n                        <InputOTPSlot className=\"bg-background\" index={5} />\n                      </InputOTPGroup>\n                    </InputOTP>\n                  </div>\n                </FormControl>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <div className=\"flex gap-2\">\n            <Button\n              className=\"flex-1\"\n              onClick={() => toast.info(\"Transaction cancelled\")}\n              type=\"button\"\n              variant=\"outline\"\n            >\n              Cancel\n            </Button>\n            <Button className=\"flex-1\" disabled={isConfirming} type=\"submit\">\n              {isConfirming ? \"Confirming...\" : \"Confirm Transaction\"}\n            </Button>\n          </div>\n        </form>\n      </Form>\n    </div>\n  );\n};\n\nexport default Example;\n",
      "type": "registry:component"
    }
  ]
}