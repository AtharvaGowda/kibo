{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pattern-input-otp-use-cases-2",
  "type": "registry:component",
  "title": "Input Otp Use Cases 2",
  "description": "A input-otp pattern: input-otp-use-cases-2",
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/patterns/input-otp/use-cases/input-otp-use-cases-2.tsx",
      "content": "\"use client\";\n\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { Key, Shield } from \"lucide-react\";\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { toast } from \"sonner\";\nimport { z } from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport {\n  InputOTP,\n  InputOTPGroup,\n  InputOTPSeparator,\n  InputOTPSlot,\n} from \"@/components/ui/input-otp\";\n\nexport const title = \"Two-Factor Authentication\";\n\nconst formSchema = z.object({\n  code: z.string().min(6, {\n    message: \"Authentication code must be 6 characters.\",\n  }),\n  backupCode: z.string().optional(),\n});\n\nconst Example = () => {\n  const [useBackupCode, setUseBackupCode] = useState(false);\n\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      code: \"\",\n      backupCode: \"\",\n    },\n  });\n\n  function onSubmit(values: z.infer<typeof formSchema>) {\n    if (useBackupCode) {\n      toast.success(`Authenticated with backup code: ${values.backupCode}`);\n    } else {\n      toast.success(`Authenticated with code: ${values.code}`);\n    }\n  }\n\n  return (\n    <div className=\"w-full max-w-sm space-y-6\">\n      <div className=\"flex flex-col items-center space-y-2 text-center\">\n        <div className=\"flex h-12 w-12 items-center justify-center rounded-full bg-primary/10\">\n          <Shield className=\"h-6 w-6 text-primary\" />\n        </div>\n        <h2 className=\"font-semibold text-2xl\">Two-Factor Authentication</h2>\n        <p className=\"text-muted-foreground text-sm\">\n          Enter the code from your authenticator app\n        </p>\n      </div>\n      <Form {...form}>\n        <form className=\"space-y-6\" onSubmit={form.handleSubmit(onSubmit)}>\n          {useBackupCode ? (\n            <FormField\n              control={form.control}\n              name=\"backupCode\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Backup Code</FormLabel>\n                  <FormControl>\n                    <Input\n                      className=\"bg-background\"\n                      placeholder=\"Enter backup code\"\n                      {...field}\n                    />\n                  </FormControl>\n                  <FormDescription>\n                    Enter one of your backup codes.\n                  </FormDescription>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          ) : (\n            <FormField\n              control={form.control}\n              name=\"code\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormControl>\n                    <div className=\"flex justify-center\">\n                      <InputOTP maxLength={6} {...field}>\n                        <InputOTPGroup>\n                          <InputOTPSlot className=\"bg-background\" index={0} />\n                          <InputOTPSlot className=\"bg-background\" index={1} />\n                          <InputOTPSlot className=\"bg-background\" index={2} />\n                        </InputOTPGroup>\n                        <InputOTPSeparator />\n                        <InputOTPGroup>\n                          <InputOTPSlot className=\"bg-background\" index={3} />\n                          <InputOTPSlot className=\"bg-background\" index={4} />\n                          <InputOTPSlot className=\"bg-background\" index={5} />\n                        </InputOTPGroup>\n                      </InputOTP>\n                    </div>\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n          )}\n          <Button className=\"w-full\" type=\"submit\">\n            Verify\n          </Button>\n        </form>\n      </Form>\n      <div className=\"text-center\">\n        <Button\n          className=\"h-auto p-0 text-sm\"\n          onClick={() => setUseBackupCode(!useBackupCode)}\n          type=\"button\"\n          variant=\"link\"\n        >\n          <Key className=\"mr-2 h-3 w-3\" />\n          {useBackupCode ? \"Use authenticator code\" : \"Use backup code instead\"}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default Example;\n",
      "type": "registry:component"
    }
  ]
}