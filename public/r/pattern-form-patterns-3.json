{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pattern-form-patterns-3",
  "type": "registry:component",
  "title": "Form Patterns 3",
  "description": "A form pattern: form-patterns-3",
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/patterns/form/patterns/form-patterns-3.tsx",
      "content": "\"use client\";\n\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\n\nexport const title = \"Profile Edit Form\";\n\nconst formSchema = z.object({\n  username: z.string().min(3, {\n    message: \"Username must be at least 3 characters.\",\n  }),\n  email: z.string().email({\n    message: \"Please enter a valid email address.\",\n  }),\n  bio: z.string().max(160, {\n    message: \"Bio must not exceed 160 characters.\",\n  }),\n  website: z\n    .string()\n    .url({\n      message: \"Please enter a valid URL.\",\n    })\n    .optional()\n    .or(z.literal(\"\")),\n});\n\nconst Example = () => {\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: {\n      username: \"johndoe\",\n      email: \"john@example.com\",\n      bio: \"Software developer passionate about building great products.\",\n      website: \"https://johndoe.com\",\n    },\n  });\n\n  function onSubmit(values: z.infer<typeof formSchema>) {\n    console.log(values);\n  }\n\n  return (\n    <div className=\"w-full max-w-2xl\">\n      <Form {...form}>\n        <form className=\"space-y-6\" onSubmit={form.handleSubmit(onSubmit)}>\n          <div>\n            <h3 className=\"font-medium text-lg\">Profile Settings</h3>\n            <p className=\"text-muted-foreground text-sm\">\n              Update your profile information\n            </p>\n          </div>\n          <FormField\n            control={form.control}\n            name=\"username\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Username</FormLabel>\n                <FormControl>\n                  <Input\n                    className=\"bg-background\"\n                    placeholder=\"johndoe\"\n                    {...field}\n                  />\n                </FormControl>\n                <FormDescription>\n                  This is your public display name.\n                </FormDescription>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"email\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Email</FormLabel>\n                <FormControl>\n                  <Input\n                    className=\"bg-background\"\n                    placeholder=\"john@example.com\"\n                    type=\"email\"\n                    {...field}\n                  />\n                </FormControl>\n                <FormDescription>\n                  Your email address is not publicly visible.\n                </FormDescription>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"bio\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Bio</FormLabel>\n                <FormControl>\n                  <Textarea\n                    className=\"resize-none bg-background\"\n                    placeholder=\"Tell us about yourself\"\n                    rows={4}\n                    {...field}\n                  />\n                </FormControl>\n                <FormDescription>\n                  {field.value?.length || 0}/160 characters\n                </FormDescription>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <FormField\n            control={form.control}\n            name=\"website\"\n            render={({ field }) => (\n              <FormItem>\n                <FormLabel>Website</FormLabel>\n                <FormControl>\n                  <Input\n                    className=\"bg-background\"\n                    placeholder=\"https://example.com\"\n                    type=\"url\"\n                    {...field}\n                  />\n                </FormControl>\n                <FormDescription>\n                  Your personal website or portfolio.\n                </FormDescription>\n                <FormMessage />\n              </FormItem>\n            )}\n          />\n          <div className=\"flex gap-2\">\n            <Button type=\"submit\">Save Changes</Button>\n            <Button type=\"button\" variant=\"outline\">\n              Cancel\n            </Button>\n          </div>\n        </form>\n      </Form>\n    </div>\n  );\n};\n\nexport default Example;\n",
      "type": "registry:component"
    }
  ]
}