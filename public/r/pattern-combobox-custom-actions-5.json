{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "pattern-combobox-custom-actions-5",
  "type": "registry:component",
  "title": "Combobox Custom Actions 5",
  "description": "A combobox pattern: combobox-custom-actions-5",
  "registryDependencies": [],
  "files": [
    {
      "path": "registry/new-york/patterns/combobox/custom-actions/combobox-custom-actions-5.tsx",
      "content": "\"use client\";\n\nimport { Check, ChevronsUpDown } from \"lucide-react\";\nimport { useState } from \"react\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n} from \"@/components/ui/command\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\nimport { cn } from \"@/lib/utils\";\n\nexport const title = \"With Quick Filters\";\n\nconst items = [\n  { value: \"item-1\", label: \"Bug Report\", category: \"bug\" },\n  { value: \"item-2\", label: \"Feature Request\", category: \"feature\" },\n  { value: \"item-3\", label: \"Documentation\", category: \"docs\" },\n  { value: \"item-4\", label: \"Critical Bug\", category: \"bug\" },\n  { value: \"item-5\", label: \"New Feature\", category: \"feature\" },\n];\n\nconst Example = () => {\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState(\"\");\n  const [filter, setFilter] = useState<string | null>(null);\n\n  const filteredItems = filter\n    ? items.filter((item) => item.category === filter)\n    : items;\n\n  return (\n    <Popover onOpenChange={setOpen} open={open}>\n      <PopoverTrigger asChild>\n        <Button\n          aria-expanded={open}\n          className=\"w-[250px] justify-between\"\n          role=\"combobox\"\n          variant=\"outline\"\n        >\n          {value\n            ? items.find((item) => item.value === value)?.label\n            : \"Select item...\"}\n          <ChevronsUpDown className=\"ml-2 size-4 shrink-0 opacity-50\" />\n        </Button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-[250px] p-0\">\n        <Command>\n          <CommandInput placeholder=\"Search items...\" />\n          <div className=\"flex gap-1 border-b p-2\">\n            <Badge\n              className=\"cursor-pointer text-xs\"\n              onClick={() => setFilter(null)}\n              variant={filter === null ? \"default\" : \"outline\"}\n            >\n              All\n            </Badge>\n            <Badge\n              className=\"cursor-pointer text-xs\"\n              onClick={() => setFilter(\"bug\")}\n              variant={filter === \"bug\" ? \"default\" : \"outline\"}\n            >\n              Bugs\n            </Badge>\n            <Badge\n              className=\"cursor-pointer text-xs\"\n              onClick={() => setFilter(\"feature\")}\n              variant={filter === \"feature\" ? \"default\" : \"outline\"}\n            >\n              Features\n            </Badge>\n            <Badge\n              className=\"cursor-pointer text-xs\"\n              onClick={() => setFilter(\"docs\")}\n              variant={filter === \"docs\" ? \"default\" : \"outline\"}\n            >\n              Docs\n            </Badge>\n          </div>\n          <CommandList>\n            <CommandEmpty>No item found.</CommandEmpty>\n            <CommandGroup>\n              {filteredItems.map((item) => (\n                <CommandItem\n                  key={item.value}\n                  onSelect={(currentValue) => {\n                    setValue(currentValue === value ? \"\" : currentValue);\n                    setOpen(false);\n                  }}\n                  value={item.value}\n                >\n                  <Check\n                    className={cn(\n                      \"mr-2 size-4\",\n                      value === item.value ? \"opacity-100\" : \"opacity-0\"\n                    )}\n                  />\n                  {item.label}\n                </CommandItem>\n              ))}\n            </CommandGroup>\n          </CommandList>\n        </Command>\n      </PopoverContent>\n    </Popover>\n  );\n};\n\nexport default Example;\n",
      "type": "registry:component"
    }
  ]
}